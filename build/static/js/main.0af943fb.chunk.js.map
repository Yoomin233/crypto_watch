{"version":3,"sources":["Footer.tsx","components/ImgLoading.tsx","Cell.tsx","Add.tsx","hooks/useGetListings.ts","hooks/useGetMapStorage.ts","hooks/useSubsequentUpdate.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Wrapper","styled","p","Footer","wsStatus","lastRefetch","statusString","undefined","className","href","target","rel","Date","Number","toFixed","spin","keyframes","Spinner","span","ImgLoading","src","alt","useState","loaded","setLoaded","useEffect","img","Image","onload","console","log","div","CellWrapper","MoreSection","ChartsWrapper","ChartsGroup","id","period","setPeriod","onClick","Charts","PriceCell","name","info","onRemove","prices","setPrices","idx","expandStatus","setExpandStatus","p24h","price","infoName","slug","lastPrice","useRef","isUp","current","onMove","idxOffset","temp","expandTemp","isExpanded","e","stopPropagation","style","backgroundColor","Math","sqrt","abs","disabled","length","TokenList","AddToken","onAdd","mapData","search","setSearch","mapArr","Object","values","ref","searchRes","filter","token","toLowerCase","includes","symbol","value","onChange","placeholder","slice","map","r","setTimeout","focus","useGetListings","ids","setter","setLastRefetch","refetch","axios","get","join","then","data","priceData","cryptoCurrencyList","d","find","quotes","percentChange24h","useGetMapStorage","key","localStorage","getItem","JSON","parse","String","setMapData","fetchMap","useCallback","storedData","cryptoCurrencyMap","reduce","prev","next","setItem","stringify","timeStamp","useSubsequentUpdate","cb","deps","mounted","LOCAL_ID_KEY","HeadWrapper","App","setWSStatus","URL","window","location","searchParams","split","Array","from","fill","resubscribing","WSInstance","refetchAPI","initWS","WS","WebSocket","subscribeWS","readyState","onopen","param","method","cryptoIds","send","onmessage","res","cr","addEventListener","reconnect","close","closeWS","handleAddOrRemove","add","handleExpand","expand","_","writeURL","url","set","history","replaceState","document","title","idsStored","idsString","Add","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0af943fb.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\n// const;\n\nconst Wrapper = styled.p`\n  position: fixed;\n  bottom: 0;\n  margin: 0px auto;\n  font-size: 0.8em;\n  padding: 8px;\n  width: 100%;\n  background-color: var(--background-color);\n  /* border-top: 1px solid var(--border-color); */\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: 1fr 1fr 1fr;\n  align-items: center;\n  transition: all 0.3s ease-in-out, transform 0.3s linear 3s;\n\n  backdrop-filter: blur(6px);\n  a {\n    color: var(--text-color);\n    color: inherit;\n  }\n\n  &.Connecting {\n    background-color: yellow;\n    color: #000;\n  }\n  &.Connected {\n    background-color: rgba(0, 255, 0, 0.33);\n    transform: translateY(calc(100% - 4px));\n  }\n  &.Disconnected {\n    background-color: var(--down-color);\n  }\n  > *:first-child {\n    justify-self: start;\n  }\n  > *:last-child {\n    justify-self: end;\n  }\n`;\n\nconst Footer = ({\n  wsStatus,\n  lastRefetch,\n}: // reconnect,\n{\n  wsStatus: number;\n  lastRefetch: Date;\n  // reconnect: any;\n}) => {\n  const status = wsStatus;\n  //   console.log(status);\n  const statusString =\n    status === 0 || status === undefined\n      ? \"Connecting\"\n      : status === 1\n      ? \"Connected\"\n      : status === 3\n      ? \"Disconnected\"\n      : undefined;\n  return (\n    <Wrapper className={statusString}>\n      <span>\n        Data Source:{\" \"}\n        <a href=\"https://coinmarketcap.com/\" target=\"_blank\" rel=\"noreferrer\">\n          CoinMarketCap\n        </a>\n      </span>\n      <span>\n        <i>\n          {((+new Date() - Number(lastRefetch)) / 1000).toFixed(0) +\n            \" Seconds ago\"}\n        </i>\n      </span>\n      <span>\n        <i>{statusString}</i>\n      </span>\n    </Wrapper>\n  );\n};\n\nexport default Footer;\n","import { useEffect, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst spin = keyframes`\n    to {\n        transform: rotate(1turn);\n    }\n`;\n\n// console.log(spin);\n\nconst Spinner = styled.span`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-grow: 1;\n  > span {\n    border: 3px solid var(--border-color);\n    border-radius: 50%;\n    border-top-color: var(--text-color);\n    width: 1em;\n    height: 1em;\n    animation: ${spin} 1s linear 0s infinite;\n  }\n`;\n\nconst ImgLoading: React.FC<\n  React.DetailedHTMLProps<\n    React.ImgHTMLAttributes<HTMLImageElement>,\n    HTMLImageElement\n  >\n> = ({ src = \"\", alt }) => {\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    setLoaded(false);\n    const img = new Image();\n    img.src = src;\n    img.onload = () => {\n      setLoaded(true);\n      console.log(\"loaded!\");\n    };\n  }, [src]);\n//   return (\n//     <Spinner>\n//       <span></span>\n//     </Spinner>\n//   );\n  return loaded ? (\n    <img src={src} alt={alt} />\n  ) : (\n    <Spinner>\n      <span></span>\n    </Spinner>\n  );\n};\n\nexport default ImgLoading;\n","import { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport ImgLoading from \"./components/ImgLoading\";\n\nconst Wrapper = styled.div`\n  display: inline-block;\n  padding: 6px 8px;\n  /* margin-top: 8px; */\n  width: calc(50%);\n  vertical-align: top;\n  /* display: inline-block; */\n  /* border-left: 1px solid #fff; */\n  /* border-radius: 4px; */\n  cursor: pointer;\n  box-sizing: border-box;\n  user-select: none;\n  border-bottom: 1px solid var(--border-color);\n  @media screen and (max-width: 450px) {\n    white-space: nowrap;\n    width: 100%;\n    /* overflow: hidden; */\n  }\n`;\n\nconst CellWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  /* &:hover {\n    transform: translateY(-2px);\n  } */\n  @media screen and (max-width: 450px) {\n    > a:first-child {\n      max-width: 45vw;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n  > a {\n    color: inherit;\n    font-size: 1.1em;\n    text-decoration: none;\n    font-weight: bold;\n  }\n  img {\n    width: 2rem;\n    margin-right: 0.5em;\n    vertical-align: middle;\n  }\n  span.price {\n    font-weight: bold;\n    font-size: 1.2em;\n    &.up {\n      color: var(--up-color);\n    }\n    &.down {\n      color: var(--down-color);\n    }\n  }\n  span.percentage {\n    padding: 4px 8px;\n    border-radius: 4px;\n    color: #fff;\n    margin-left: 12px;\n    display: inline-block;\n    text-align: center;\n    /* width: 4.5em; */\n  }\n`;\n\nconst MoreSection = styled.div`\n  padding-top: 8px;\n  /* border-bottom: 1px solid var(--border-color); */\n  justify-content: space-between;\n  display: flex;\n  button {\n    font-size: 0.8em;\n  }\n  .buttons {\n    display: grid;\n    gap: 4px;\n  }\n`;\n\nconst ChartsWrapper = styled.div`\n  display: flex;\n  flex-grow: 1;\n  .switch {\n    display: grid;\n    margin-right: 8px;\n    > span {\n      border: 1px solid transparent;\n      border-top-left-radius: 6px;\n      border-bottom-left-radius: 6px;\n      padding: 2px 8px;\n      border-right-color: var(--border-color);\n      &.selected {\n        /* color: yellow; */\n        border-color: var(--border-color);\n        border-right-color: transparent;\n      }\n    }\n  }\n  img {\n    width: 100%;\n  }\n`;\n\nconst ChartsGroup = ({ id = 1 }) => {\n  const [period, setPeriod] = useState(7);\n  return (\n    <ChartsWrapper>\n      <div className=\"switch\">\n        <span\n          className={period === 1 ? \"selected\" : undefined}\n          onClick={() => setPeriod(1)}\n        >\n          24h\n        </span>\n        <span\n          className={period === 7 ? \"selected\" : undefined}\n          onClick={() => setPeriod(7)}\n        >\n          7d\n        </span>\n        <span\n          className={period === 30 ? \"selected\" : undefined}\n          onClick={() => setPeriod(30)}\n        >\n          30d\n        </span>\n        <span\n          className={period === 60 ? \"selected\" : undefined}\n          onClick={() => setPeriod(60)}\n        >\n          60d\n        </span>\n        <span\n          className={period === 90 ? \"selected\" : undefined}\n          onClick={() => setPeriod(90)}\n        >\n          90d\n        </span>\n      </div>\n      <Charts id={id} period={period} />\n    </ChartsWrapper>\n  );\n};\n\nconst Charts = ({ id = 1, period = 7 }) => {\n  return (\n    <ImgLoading\n      src={`https://s3.coinmarketcap.com/generated/sparklines/web/${period}d/2781/${id}.svg`}\n      alt={`${id} sparkline`}\n    />\n  );\n};\n\nconst PriceCell = ({\n  name,\n  info,\n  onRemove,\n  prices,\n  setPrices,\n  idx,\n  expandStatus,\n  setExpandStatus,\n}: any) => {\n  // console.log(info);\n  const { id, p24h, price, name: infoName, slug } = info;\n  const lastPrice = useRef(price);\n  const isUp = useRef(true);\n\n  // const [expand, setExpand] = useState(false);\n\n  useEffect(() => {\n    if (price !== lastPrice.current) {\n      //   console.log(\"update!\", price);\n      isUp.current = lastPrice.current < price || price === undefined;\n      lastPrice.current = price;\n    }\n    // console.log(\"price change!\", lastPrice.current, price);\n  }, [price]);\n\n  const onMove = (isUp?: boolean) => {\n    // let temp;\n    const idxOffset = isUp ? -1 : 1;\n    // if (isUp) {\n    const temp = prices[idx + idxOffset];\n    prices[idx + idxOffset] = prices[idx];\n    prices[idx] = temp;\n\n    const expandTemp = expandStatus[idx + idxOffset];\n    expandStatus[idx + idxOffset] = expandStatus[idx];\n    expandStatus[idx] = expandTemp;\n    setPrices([...prices]);\n    setExpandStatus([...expandStatus]);\n  };\n\n  useEffect(() => {\n    expandStatus[idx] = 0;\n    setExpandStatus([...expandStatus]);\n  }, []);\n\n  const isExpanded = !!expandStatus[idx];\n\n  return (\n    <Wrapper>\n      <CellWrapper\n        key={id}\n        onClick={() => {\n          // console.log(\"click!\", expand);\n          expandStatus[idx] = !expandStatus[idx];\n          setExpandStatus([...expandStatus]);\n        }}\n      >\n        <a\n          href={`https://coinmarketcap.com/currencies/${slug}/`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          onClick={(e) => e.stopPropagation()}\n        >\n          <img\n            src={`https://s2.coinmarketcap.com/static/img/coins/64x64/${id}.png`}\n            alt={id}\n          />\n          {name || infoName || \"unknown\"}\n        </a>\n        <span>\n          <span className={`price ${isUp.current ? \"up\" : \"down\"}`}>\n            {price ? price?.toFixed(4) : \"-\"}\n            {isUp.current ? \"↑\" : \"↓\"}\n          </span>\n          <span\n            className=\"percentage\"\n            style={{\n              backgroundColor:\n                p24h > 0\n                  ? `rgba(0, 255, 0, ${Math.sqrt(Math.abs(p24h / 10))})`\n                  : `rgba(255, 0, 0, ${Math.sqrt(Math.abs(p24h / 10))})`,\n            }}\n          >\n            {p24h ? `${p24h.toFixed(2)}%` : \"\"}\n          </span>\n        </span>\n      </CellWrapper>\n      {isExpanded && (\n        <MoreSection>\n          <ChartsGroup id={id} />\n          <div className=\"buttons\">\n            <button onClick={() => onMove(true)} disabled={idx === 0}>\n              ⬆\n            </button>\n            <button\n              onClick={() => onMove()}\n              disabled={idx === prices.length - 1}\n            >\n              ⬇\n            </button>\n            <button onClick={() => onRemove(id)} className=\"danger\">\n              ╳\n            </button>\n          </div>\n        </MoreSection>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default PriceCell;\n","import { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst TokenList = styled.div`\n  cursor: pointer;\n  margin: 4px auto;\n  > img {\n    width: 1.5em;\n    margin-right: 0.5em;\n    vertical-align: middle;\n  }\n`;\n\nconst Wrapper = styled.div`\n  margin: 12px 0px;\n  > div {\n    position: absolute;\n    background: var(--background-color);\n    border: 1px solid var(--border-color);\n    border-radius: 4px;\n    width: 100%;\n    text-align: left;\n    padding-left: 8px;\n  }\n`;\n\nconst AddToken = ({ onAdd, mapData }: any) => {\n  const [search, setSearch] = useState(\"\");\n  const mapArr = Object.values(mapData);\n  const ref = useRef<HTMLInputElement>(null);\n\n  // useEffect(() => {\n  //   ref.current?.focus();\n  // }, []);\n\n  const searchRes = search\n    ? mapArr.filter(\n        (token: any) =>\n          token.name.toLowerCase().includes(search.toLowerCase()) ||\n          token.symbol.toLowerCase().includes(search.toLowerCase())\n      )\n    : [];\n  return (\n    <Wrapper>\n      <input\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n        placeholder={mapArr.length ? \"Type Something...\" : \"Loading...\"}\n        disabled={!mapArr.length}\n        ref={ref}\n      />\n      {searchRes.length ? (\n        <div>\n          {searchRes.slice(0, 10).map((r: any) => (\n            <TokenList\n              key={r.id}\n              onClick={() => {\n                onAdd(r.id);\n                setSearch(\"\");\n                setTimeout(() => {\n                  ref.current?.focus();\n                }, 500);\n              }}\n            >\n              <img\n                src={`https://s2.coinmarketcap.com/static/img/coins/64x64/${r.id}.png`}\n                alt={r.id}\n              />\n              {r.name}\n            </TokenList>\n          ))}\n        </div>\n      ) : null}\n    </Wrapper>\n  );\n};\n\nexport default AddToken;\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst useGetListings = (\n  ids: number[],\n  setter: React.Dispatch<\n    React.SetStateAction<\n      {\n        id: number;\n        price?: number | undefined;\n        p24h?: number | undefined;\n      }[]\n    >\n  >\n  // refetch: boolean\n): [() => Promise<any>, Date] => {\n  // console.log(refetch);\n\n  const [lastRefetch, setLastRefetch] = useState(new Date());\n\n  const refetch = () =>\n    axios\n      .get(\n        `https://api.coinmarketcap.com/data-api/v3/cryptocurrency/listing?ids=${ids.join(\n          \",\"\n        )}&aux=ath`\n      )\n      .then(({ data }) => {\n        if (!data?.data) return;\n        const priceData = data.data.cryptoCurrencyList;\n        setLastRefetch(new Date());\n        setter((data) => {\n          return data.map((d) => {\n            const find = priceData.find((p: any) => p.id === d.id);\n            // console.log(find);\n            // console.log(d.id);\n            if (find) {\n              return {\n                ...d,\n                price: find.quotes?.[0]?.price || 0,\n                p24h: find.quotes?.[0]?.percentChange24h || 0,\n                name: find.name,\n                slug: find.slug,\n              };\n            } else {\n              return d;\n            }\n          });\n        });\n      });\n  useEffect(() => {\n    refetch();\n    // if (!refetch) return;\n    // console.log(\"call!!\");\n  }, [ids.length, setter]);\n  return [refetch, lastRefetch];\n};\n\nexport default useGetListings;\n","import axios from \"axios\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nconst useGetMapStorage = (key: string) => {\n  const [mapData, setMapData] = useState<any>(() =>\n    localStorage.getItem(key)\n      ? JSON.parse(String(localStorage.getItem(key))).data\n      : {}\n  );\n  const fetchMap = useCallback(\n    () =>\n      axios\n        .get(\n          \"https://api.coinmarketcap.com/data-api/v3/map/all?cryptoAux=status&limit=10000&listing_status=active&start=1\"\n        )\n        .then(({ data }) => {\n          const storedData = data.data.cryptoCurrencyMap.reduce(\n            (prev: any, next: any) => {\n              prev[next.id] = next;\n              return prev;\n            },\n            {}\n          );\n          // console.log(storedData);\n          setMapData(storedData);\n          localStorage.setItem(\n            key,\n            JSON.stringify({\n              data: storedData,\n              timeStamp: +new Date(),\n            })\n          );\n        }),\n    [key]\n  );\n  useEffect(() => {\n    if (localStorage.getItem(key)) {\n      const timeStamp = JSON.parse(String(localStorage.getItem(key))).timeStamp;\n      if (timeStamp + 1000 * 3600 * 24 <= +new Date()) {\n        console.log(\"refetch!\");\n        fetchMap();\n      }\n    } else {\n      console.log(\"init fetch!\");\n      fetchMap();\n    }\n  }, [fetchMap, key]);\n  return mapData;\n};\n\nexport default useGetMapStorage;\n","import { useEffect, useRef } from \"react\";\n\nconst useSubsequentUpdate = (cb: any, deps: string) => {\n  const mounted = useRef(false);\n  useEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true;\n      return;\n    }\n    console.log(\"exec!\");\n    cb();\n  }, [deps]);\n};\n\nexport default useSubsequentUpdate;\n","import { useEffect, useRef, useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport Footer from \"./Footer\";\nimport PriceCell from \"./Cell\";\n// import useGetMapStorage from \"./hooks/useGetMapStorage\";\n// import WSStatus from \"./Status\";\nimport AddToken from \"./Add\";\nimport useGetListings from \"./hooks/useGetListings\";\nimport useGetMapStorage from \"./hooks/useGetMapStorage\";\nimport useSubsequentUpdate from \"./hooks/useSubsequentUpdate\";\n\nconst Separater = \"_\";\n\nconst LOCAL_KEY = \"LOCAL_KEY\";\nconst LOCAL_ID_KEY = \"LOCAL_ID_KEY\";\n\nconst Wrapper = styled.div`\n  text-align: left;\n  padding: 0px 8px;\n  /* padding-top: 8px; */\n`;\n\nconst HeadWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  > div:first-child {\n    flex-grow: 1;\n  }\n`;\n\nexport default function App() {\n  const [wsStatus, setWSStatus] = useState<number>(0);\n\n  const [prices, setPrices] = useState<\n    {\n      id: number;\n      price?: number;\n      p24h?: number;\n      slug?: string;\n      name?: string;\n    }[]\n  >(() => {\n    const ids = new URL(window.location.href).searchParams.get(\"ids\");\n    if (ids) {\n      return ids.split(Separater).map((id) => ({\n        id: Number(id) || 1,\n      }));\n    }\n    return [];\n  });\n\n  // console.log(prices);\n\n  const [expandStatus, setExpandStatus] = useState(() =>\n    Array.from({ length: prices.length }).fill(0)\n  );\n\n  // console.log(expandStatus);\n\n  const ids = prices.map(({ id }) => id);\n\n  const resubscribing = useRef(false);\n\n  const mapData = useGetMapStorage(LOCAL_KEY);\n\n  const WSInstance = useRef<WebSocket>();\n\n  const [refetchAPI, lastRefetch] = useGetListings(ids, setPrices);\n\n  const initWS = () => {\n    let WS;\n    try {\n      WS = new WebSocket(\"wss://stream.coinmarketcap.com/price/latest\");\n      WSInstance.current = WS;\n    } catch (e) {\n      setTimeout(() => {\n        initWS();\n        subscribeWS(ids);\n      }, 1000);\n    }\n  };\n\n  const closeWS = () => {\n    WSInstance.current?.close();\n  };\n\n  const subscribeWS = (ids: number[]) => {\n    if (!WSInstance.current) return;\n    const WS = WSInstance.current;\n    setWSStatus(WS.readyState);\n    WS.onopen = function () {\n      console.log(\"ws connected!\");\n      setWSStatus(WS.readyState);\n      if (resubscribing.current) {\n        resubscribing.current = false;\n      }\n      const param = {\n        method: \"subscribe\",\n        id: \"price\",\n        data: {\n          cryptoIds: ids,\n        },\n      };\n      WS.send(JSON.stringify(param));\n\n      WS.onmessage = function (res) {\n        const data = JSON.parse(res.data);\n        if (data?.d?.cr) {\n          const info = data.d.cr;\n          setPrices((prices) => {\n            return prices.map((p) => {\n              if (p.id === info.id) {\n                return {\n                  ...p,\n                  price: info.p,\n                  p24h: info.p24h,\n                };\n              }\n              return p;\n            });\n          });\n        } else {\n          console.log(data);\n        }\n      };\n      WS.addEventListener(\"close\", (e) => {\n        console.log(\"ws closed!\");\n        setWSStatus(WS.readyState);\n        if (!resubscribing.current) {\n          console.log(\"reconnecting...\");\n          refetchAPI();\n          setTimeout(() => {\n            initWS();\n            subscribeWS(ids);\n          }, 1000);\n        }\n      });\n    };\n  };\n\n  const reconnect = () => {\n    console.log(\"reconnect!\");\n    closeWS();\n    initWS();\n    subscribeWS(ids);\n  };\n\n  const handleAddOrRemove = (id: number, add?: boolean) => {\n    if (ids.includes(id) && add) {\n      return;\n    }\n    setPrices((prices) => {\n      const newPrices = add\n        ? [\n            ...prices,\n            {\n              id: id,\n            },\n          ]\n        : prices.filter((price) => price.id !== id);\n      return newPrices;\n    });\n  };\n\n  // const allExpanded = expandStatus.every((v) => v);\n\n  const handleExpand = (expand?: boolean) => {\n    if (expand) {\n      setExpandStatus((e) => e.map((_) => 1));\n    } else {\n      setExpandStatus((e) => e.map((_) => 0));\n    }\n  };\n\n  const writeURL = (ids: string) => {\n    const url = new URL(window.location.href);\n    url.searchParams.set(\"ids\", ids);\n    window.history.replaceState(\"\", document.title, url);\n  };\n\n  useEffect(() => {\n    const idsStored = localStorage.getItem(LOCAL_ID_KEY);\n    const idsUrl = new URL(window.location.href).searchParams.get(\"ids\");\n    // console.log(idsStored, idsUrl);\n    if (idsStored !== idsUrl && idsStored) {\n      writeURL(idsStored);\n    }\n  }, []);\n\n  /**\n   * rewrite URL when id length / order changes\n   */\n  useSubsequentUpdate(() => {\n    const idsString = ids.join(Separater);\n    writeURL(idsString);\n    localStorage.setItem(LOCAL_ID_KEY, idsString);\n    // if (ids.length) {\n    // }\n  }, ids.join());\n\n  /**\n   * resubscribe when id length changes\n   */\n  useEffect(() => {\n    if (ids.length) {\n      resubscribing.current = true;\n      reconnect();\n    }\n  }, [ids.length]);\n\n  return (\n    <div className=\"App\">\n      {/* <Gas /> */}\n      <HeadWrapper>\n        <AddToken\n          onAdd={(id: number) => handleAddOrRemove(id, true)}\n          mapData={mapData}\n        />\n        <button onClick={() => handleExpand(false)}>{\"Collapse\"}</button>\n        &nbsp;\n        <button onClick={() => handleExpand(true)}>{\"Expand\"}</button>\n      </HeadWrapper>\n      <Wrapper>\n        {prices.map((info: any, idx) => (\n          <PriceCell\n            name={mapData[info.id]?.name}\n            key={info.id}\n            info={info}\n            onRemove={(id: number) => handleAddOrRemove(id)}\n            prices={prices}\n            setPrices={setPrices}\n            idx={idx}\n            expandStatus={expandStatus}\n            setExpandStatus={setExpandStatus}\n          />\n        ))}\n      </Wrapper>\n      {/* <WSStatus /> */}\n      {ids.length ? (\n        <Footer\n          wsStatus={wsStatus}\n          // wsInstance={WSInstance}\n          // reconnect={reconnect}\n          lastRefetch={lastRefetch}\n        />\n      ) : null}\n\n      {/* <div>\n        <button onClick={() => closeWS()}>Disconnect</button>\n        <button\n          onClick={() => {\n            initWS();\n            subscribeWS(ids);\n          }}\n        >\n          Connect\n        </button>\n      </div> */}\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}