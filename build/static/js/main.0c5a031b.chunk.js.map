{"version":3,"sources":["components/Spinner.tsx","utils/eventEmitter.ts","Footer.tsx","components/lazyRender.tsx","Cell.tsx","utils/number.ts","Add.tsx","hooks/useGetListings.ts","hooks/useGetMapStorage.ts","hooks/useSubsequentUpdate.ts","Info.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["spin","keyframes","SpinnerWrapper","styled","span","Spinner","EventEmitter","cbs","this","event","cb","push","filter","func","length","data","forEach","Wrapper","p","Footer","wsStatus","lastRefetch","reconnect","status","statusString","undefined","className","Date","Number","toFixed","onClick","LazyRender","show","children","useState","showed","setShowed","useEffect","style","display","LazyChart","lazy","div","CellWrapper","MoreSection","ChartsWrapper","ChartsGroup","id","period","setPeriod","Charts","fallback","PriceCell","name","info","onRemove","prices","setPrices","idx","expandStatus","setExpandStatus","p24h","price","slug","symbol","lastPrice","useRef","isUp","setIsUp","current","setTimeout","onMove","idxOffset","temp","isExpanded","priceDisplay","useMemo","num","Math","max","floor","log10","count","determineFraction","href","target","rel","e","stopPropagation","src","alt","backgroundColor","sqrt","abs","disabled","TokenList","AddToken","onAdd","mapData","search","setSearch","mapArr","Object","values","ref","searchRes","token","toLowerCase","includes","value","onChange","placeholder","slice","map","r","focus","useGetListings","ids","setter","setLastRefetch","refetch","axios","get","join","then","priceData","cryptoCurrencyList","d","find","quotes","percentChange24h","useGetMapStorage","key","localStorage","getItem","JSON","parse","String","setMapData","fetchMap","useCallback","storedData","cryptoCurrencyMap","reduce","prev","next","setItem","stringify","timeStamp","console","log","useSubsequentUpdate","deps","mounted","Info","LOCAL_ID_KEY","HeadWrapper","App","setWSStatus","URL","window","location","searchParams","split","resubscribing","WSInstance","refetchAPI","initWS","WS","WebSocket","subscribeWS","readyState","onopen","param","method","cryptoIds","send","onmessage","res","cr","eventEmitter","emit","addEventListener","close","closeWS","handleAddOrRemove","add","writeURL","url","set","history","replaceState","document","title","idsStored","idsString","Add","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c5a031b.chunk.js","sourcesContent":["import styled, { keyframes } from \"styled-components\";\n\nconst spin = keyframes`\n    to {\n        transform: rotate(1turn);\n    }\n`;\n\nconst SpinnerWrapper = styled.span`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-grow: 1;\n  > span {\n    border: 3px solid var(--border-color);\n    border-radius: 50%;\n    border-top-color: var(--text-color);\n    width: 1em;\n    height: 1em;\n    animation: ${spin} 1s linear 0s infinite;\n  }\n`;\n\nconst Spinner = () => {\n  return (\n    <SpinnerWrapper>\n      <span></span>\n    </SpinnerWrapper>\n  );\n};\n\nexport default Spinner;\n","type Events = string;\n\nclass EventEmitter {\n  cbs: {\n    [key: string]: any[];\n  };\n  constructor() {\n    this.cbs = {};\n  }\n  subscribe(event: Events, cb: any) {\n    if (!this.cbs[event]) {\n      this.cbs[event] = [];\n    }\n    this.cbs[event].push(cb);\n    return cb;\n    // this.cbs.push(cb);\n  }\n  unsubscribe(event: Events, cb: any) {\n    if (this.cbs[event]) {\n      this.cbs[event] = this.cbs[event].filter((func) => func !== cb);\n      if (this.cbs[event].length === 0) {\n        delete this.cbs[event];\n      }\n    }\n  }\n  emit(event: Events, data: any) {\n    if (this.cbs[event]) {\n      this.cbs[event].forEach((cb) => cb(data));\n    }\n  }\n}\n\nexport default new EventEmitter();\n","import styled from \"styled-components\";\n\n// const;\n\nconst Wrapper = styled.p`\n  position: fixed;\n  bottom: 0;\n  margin: 0px auto;\n  font-size: 0.8em;\n  padding: 8px;\n  width: 100%;\n  background-color: var(--background-color);\n  /* border-top: 1px solid var(--border-color); */\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: 1fr 1fr;\n  align-items: center;\n  transition: all 0.3s ease-in-out, transform 0.3s linear 3s;\n\n  backdrop-filter: blur(6px);\n  a {\n    color: var(--text-color);\n    color: inherit;\n  }\n\n  &.Connecting {\n    background-color: yellow;\n    color: #000;\n  }\n  &.Connected {\n    background-color: rgba(0, 255, 0, 0.33);\n    transform: translateY(calc(100% - 4px));\n  }\n  &.Disconnected {\n    background-color: var(--down-color);\n  }\n  > *:first-child {\n    justify-self: start;\n  }\n  > *:last-child {\n    justify-self: end;\n  }\n`;\n\nconst Footer = ({\n  wsStatus,\n  lastRefetch,\n  reconnect,\n}: // reconnect,\n{\n  wsStatus: number;\n  lastRefetch: Date;\n  reconnect: any;\n}) => {\n  const status = wsStatus;\n  //   console.log(status);\n  const statusString =\n    status === 0 || status === undefined\n      ? \"Connecting\"\n      : status === 1\n      ? \"Connected\"\n      : status === 3\n      ? \"Disconnected\"\n      : undefined;\n  return (\n    <Wrapper className={statusString}>\n      <span>\n        <i>\n          {((+new Date() - Number(lastRefetch)) / 1000).toFixed(0) +\n            \" Seconds ago\"}\n        </i>\n      </span>\n      <span>\n        <i>{statusString}</i>\n        {status === 3 && <button onClick={reconnect}>Reconnect</button>}\n      </span>\n    </Wrapper>\n  );\n};\n\nexport default Footer;\n","import { useEffect, useState } from \"react\";\n\nconst LazyRender: React.FC<{ show: boolean }> = ({ show, children }) => {\n  const [showed, setShowed] = useState<boolean>(show);\n  useEffect(() => {\n    if (show) {\n      setShowed(show);\n    }\n  }, [show]);\n  if (showed && show) {\n    return <div>{children}</div>;\n  } else if (showed && !show) {\n    return (\n      <div\n        style={{\n          display: \"none\",\n        }}\n      >\n        {children}\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default LazyRender;\n","import { lazy, Suspense, useEffect, useMemo, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n// import ImgLoading from \"./components/ImgLoading\";\nimport LazyRender from \"./components/lazyRender\";\nimport Spinner from \"./components/Spinner\";\nimport { determineFraction } from \"./utils/number\";\n\nconst LazyChart = lazy(() => import(\"./components/chart\"));\n\nconst Wrapper = styled.div`\n  display: inline-block;\n  padding: 6px 8px;\n  /* margin-top: 8px; */\n  width: calc(50%);\n  vertical-align: top;\n  /* display: inline-block; */\n  /* border-left: 1px solid #fff; */\n  /* border-radius: 4px; */\n  cursor: pointer;\n  box-sizing: border-box;\n  user-select: none;\n  border-bottom: 1px solid var(--border-color);\n  @media screen and (max-width: 450px) {\n    white-space: nowrap;\n    width: 100%;\n    /* overflow: hidden; */\n  }\n`;\n\nconst CellWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  /* &:hover {\n    transform: translateY(-2px);\n  } */\n  @media screen and (max-width: 450px) {\n    > a:first-child {\n      max-width: 45vw;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n  > a {\n    color: inherit;\n    font-size: 1.1em;\n    text-decoration: none;\n    font-weight: bold;\n  }\n  img {\n    width: 2rem;\n    margin-right: 0.5em;\n    vertical-align: middle;\n  }\n  span.price {\n    font-weight: bold;\n    font-size: 1.2em;\n    transition: all 0.1s linear;\n    &.up {\n      color: var(--up-color);\n    }\n    &.down {\n      color: var(--down-color);\n    }\n  }\n  span.percentage {\n    padding: 4px 8px;\n    border-radius: 4px;\n    color: #fff;\n    margin-left: 12px;\n    display: inline-block;\n    text-align: center;\n    /* width: 4.5em; */\n  }\n`;\n\nconst MoreSection = styled.div`\n  padding-top: 8px;\n  /* border-bottom: 1px solid var(--border-color); */\n  justify-content: space-between;\n  display: flex;\n  button {\n    font-size: 0.8em;\n  }\n  .buttons {\n    display: grid;\n    gap: 4px;\n    margin-left: 8px;\n  }\n`;\n\nconst ChartsWrapper = styled.div`\n  display: flex;\n  flex-grow: 1;\n  .switch {\n    display: grid;\n    margin-right: 8px;\n    > span {\n      border: 1px solid transparent;\n      border-top-left-radius: 6px;\n      border-bottom-left-radius: 6px;\n      padding: 2px 8px;\n      border-right-color: #1fe230;\n      &.selected {\n        /* color: yellow; */\n        border-color: #1fe230;\n        border-right-color: transparent;\n      }\n    }\n  }\n  img {\n    width: 100%;\n  }\n`;\n\nconst ChartsGroup = ({ id = 1 }) => {\n  const [period, setPeriod] = useState(\"1D\");\n  return (\n    <ChartsWrapper>\n      <div className=\"switch\">\n        <span\n          className={period === \"1D\" ? \"selected\" : undefined}\n          onClick={() => setPeriod(\"1D\")}\n        >\n          24h\n        </span>\n        <span\n          className={period === \"7D\" ? \"selected\" : undefined}\n          onClick={() => setPeriod(\"7D\")}\n        >\n          7D\n        </span>\n        <span\n          className={period === \"1M\" ? \"selected\" : undefined}\n          onClick={() => setPeriod(\"1M\")}\n        >\n          1M\n        </span>\n        <span\n          className={period === \"3M\" ? \"selected\" : undefined}\n          onClick={() => setPeriod(\"3M\")}\n        >\n          3M\n        </span>\n        <span\n          className={period === \"1Y\" ? \"selected\" : undefined}\n          onClick={() => setPeriod(\"1Y\")}\n        >\n          1Y\n        </span>\n      </div>\n      <Charts id={id} period={period} />\n    </ChartsWrapper>\n  );\n};\n\nconst Charts = ({ id = 1, period = \"1D\" }) => {\n  return (\n    <Suspense fallback={<Spinner />}>\n      <LazyChart id={id} period={period} />\n    </Suspense>\n  );\n  //   return (\n  //     <ImgLoading\n  //       src={`https://s3.coinmarketcap.com/generated/sparklines/web/${period}d/2781/${id}.svg`}\n  //       alt={`${id} sparkline`}\n  //     />\n  //   );\n};\n\nconst PriceCell = ({\n  name,\n  info,\n  onRemove,\n  prices,\n  setPrices,\n  idx,\n  expandStatus,\n  setExpandStatus,\n}: any) => {\n  // console.log(info);\n  const { id, p24h, price, slug, symbol } = info;\n  const lastPrice = useRef(price);\n  // const isUp = useRef(true);\n  const [isUp, setIsUp] = useState<1 | 0 | -1>(0);\n\n  // const [expand, setExpand] = useState(false);\n\n  useEffect(() => {\n    // console.log('updatw!', price, lastPrice.current)\n    if (\n      price !== lastPrice.current &&\n      price !== undefined &&\n      lastPrice.current !== undefined\n    ) {\n      //   console.log(\"update!\", price);\n      if (lastPrice.current < price) {\n        setIsUp(1);\n      } else {\n        setIsUp(-1);\n      }\n      setTimeout(() => setIsUp(0), 1000);\n      // isUp.current =\n    }\n    lastPrice.current = price;\n    // console.log(\"price change!\", lastPrice.current, price);\n  }, [price]);\n\n  const onMove = (isUp?: boolean) => {\n    // let temp;\n    const idxOffset = isUp ? -1 : 1;\n    // if (isUp) {\n    const temp = prices[idx + idxOffset];\n    prices[idx + idxOffset] = prices[idx];\n    prices[idx] = temp;\n\n    // const expandTemp = expandStatus[idx + idxOffset];\n    // expandStatus[idx + idxOffset] = expandStatus[idx];\n    // expandStatus[idx] = expandTemp;\n    setPrices([...prices]);\n    // setExpandStatus([...expandStatus]);\n  };\n\n  //   useEffect(() => {\n  //     expandStatus[id] = 0;\n  //     setExpandStatus([...expandStatus]);\n  //   }, []);\n\n  const isExpanded = !!expandStatus[id];\n\n  const priceDisplay = useMemo(() => {\n    // console.log(price);\n    return price ? price.toFixed(determineFraction(price)) : \"-\";\n  }, [price]);\n\n  return (\n    <Wrapper>\n      <CellWrapper\n        key={id}\n        onClick={() => {\n          // console.log(\"click!\", expand);\n          expandStatus[id] = !expandStatus[id];\n          setExpandStatus({ ...expandStatus });\n        }}\n      >\n        <a\n          href={`https://coinmarketcap.com/currencies/${slug}/`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          onClick={(e) => e.stopPropagation()}\n        >\n          <img\n            src={`https://s2.coinmarketcap.com/static/img/coins/64x64/${id}.png`}\n            alt={id}\n          />\n          {name || symbol || \"unknown\"}\n        </a>\n        <span>\n          <span\n            className={`price ${\n              isUp === 1 ? \"up\" : isUp === -1 ? \"down\" : undefined\n            }`}\n          >\n            {priceDisplay}\n            {/* {isUp === 1 ? \"↑\" : isUp === -1 ? \"↓\" : null} */}\n          </span>\n          <span\n            className=\"percentage\"\n            style={{\n              backgroundColor:\n                p24h > 0\n                  ? `rgba(0, 255, 0, ${Math.max(\n                      0.5,\n                      Math.sqrt(Math.abs(p24h / 10))\n                    )})`\n                  : `rgba(255, 0, 0, ${Math.max(\n                      0.5,\n                      Math.sqrt(Math.abs(p24h / 10))\n                    )})`,\n            }}\n          >\n            {p24h ? `${p24h.toFixed(2)}%` : \"\"}\n          </span>\n        </span>\n      </CellWrapper>\n      <LazyRender show={isExpanded}>\n        <MoreSection>\n          <ChartsGroup id={id} />\n          <div className=\"buttons\">\n            <button onClick={() => onMove(true)} disabled={idx === 0}>\n              ⇧\n            </button>\n            <button\n              onClick={() => onMove()}\n              disabled={idx === prices.length - 1}\n            >\n              ⇩\n            </button>\n            <button onClick={() => onRemove(id)} className=\"danger\">\n              ❌\n            </button>\n          </div>\n        </MoreSection>\n      </LazyRender>\n    </Wrapper>\n  );\n};\n\nexport default PriceCell;\n","export const determineFraction = (num: number) => {\n  if (num >= 1) {\n    return Math.max(1, 4 - Math.floor(Math.log10(num)));\n  } else {\n    let count = -2;\n    // let num = 0.000001;\n    while (1 - num >= 0) {\n      num *= 10;\n      count += 1;\n    }\n    return Math.max(4, 4 + count);\n  }\n};\n","import { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst TokenList = styled.div`\n  cursor: pointer;\n  margin: 4px auto;\n  > img {\n    width: 1.5em;\n    margin-right: 0.5em;\n    vertical-align: middle;\n  }\n`;\n\nconst Wrapper = styled.div`\n  margin: 12px 0px;\n  > div {\n    position: absolute;\n    background: var(--background-color);\n    border: 1px solid var(--border-color);\n    border-radius: 4px;\n    width: 100%;\n    text-align: left;\n    padding-left: 8px;\n    z-index: 10;\n  }\n`;\n\nconst AddToken = ({ onAdd, mapData }: any) => {\n  const [search, setSearch] = useState(\"\");\n  const mapArr = Object.values(mapData);\n  const ref = useRef<HTMLInputElement>(null);\n\n  // useEffect(() => {\n  //   ref.current?.focus();\n  // }, []);\n\n  const searchRes = search\n    ? mapArr.filter(\n        (token: any) =>\n          token.name.toLowerCase().includes(search.toLowerCase()) ||\n          token.symbol.toLowerCase().includes(search.toLowerCase())\n      )\n    : [];\n  return (\n    <Wrapper>\n      <input\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n        placeholder={mapArr.length ? \"Try 'Bitcoin'\" : \"Loading...\"}\n        disabled={!mapArr.length}\n        ref={ref}\n      />\n      {searchRes.length ? (\n        <div>\n          {searchRes.slice(0, 10).map((r: any) => (\n            <TokenList\n              key={r.id}\n              onClick={() => {\n                onAdd(r.id);\n                setSearch(\"\");\n                setTimeout(() => {\n                  ref.current?.focus();\n                }, 500);\n              }}\n            >\n              <img\n                src={`https://s2.coinmarketcap.com/static/img/coins/64x64/${r.id}.png`}\n                alt={r.id}\n              />\n              {r.name}\n            </TokenList>\n          ))}\n        </div>\n      ) : null}\n    </Wrapper>\n  );\n};\n\nexport default AddToken;\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst useGetListings = (\n  ids: number[],\n  setter: React.Dispatch<\n    React.SetStateAction<\n      {\n        id: number;\n        price?: number | undefined;\n        p24h?: number | undefined;\n      }[]\n    >\n  >\n  // refetch: boolean\n): [() => Promise<any>, Date] => {\n  // console.log(refetch);\n\n  const [lastRefetch, setLastRefetch] = useState(new Date());\n\n  const refetch = () =>\n    axios\n      .get(\n        `https://api.coinmarketcap.com/data-api/v3/cryptocurrency/listing?ids=${ids.join(\n          \",\"\n        )}&aux=ath`\n      )\n      .then(({ data }) => {\n        if (!data?.data) return;\n        const priceData = data.data.cryptoCurrencyList;\n        setLastRefetch(new Date());\n        setter((data) => {\n          return data.map((d) => {\n            const find = priceData.find((p: any) => p.id === d.id);\n            // console.log(find);\n            // console.log(d.id);\n            if (find) {\n              return {\n                ...d,\n                price: find.quotes?.[0]?.price || 0,\n                p24h: find.quotes?.[0]?.percentChange24h || 0,\n                name: find.name,\n                slug: find.slug,\n              };\n            } else {\n              return d;\n            }\n          });\n        });\n      });\n  useEffect(() => {\n    refetch();\n    // if (!refetch) return;\n    // console.log(\"call!!\");\n  }, [ids.length, setter]);\n  return [refetch, lastRefetch];\n};\n\nexport default useGetListings;\n","import axios from \"axios\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nconst useGetMapStorage = (key: string) => {\n  const [mapData, setMapData] = useState<any>(() =>\n    localStorage.getItem(key)\n      ? JSON.parse(String(localStorage.getItem(key))).data\n      : {}\n  );\n  const fetchMap = useCallback(\n    () =>\n      axios\n        .get(\n          \"https://api.coinmarketcap.com/data-api/v3/map/all?cryptoAux=status&limit=10000&listing_status=active&start=1\"\n        )\n        .then(({ data }) => {\n          const storedData = data.data.cryptoCurrencyMap.reduce(\n            (prev: any, next: any) => {\n              prev[next.id] = next;\n              return prev;\n            },\n            {}\n          );\n          // console.log(storedData);\n          setMapData(storedData);\n          localStorage.setItem(\n            key,\n            JSON.stringify({\n              data: storedData,\n              timeStamp: +new Date(),\n            })\n          );\n        }),\n    [key]\n  );\n  useEffect(() => {\n    if (localStorage.getItem(key)) {\n      const timeStamp = JSON.parse(String(localStorage.getItem(key))).timeStamp;\n      if (timeStamp + 1000 * 3600 * 24 <= +new Date()) {\n        console.log(\"refetch!\");\n        fetchMap();\n      }\n    } else {\n      console.log(\"init fetch!\");\n      fetchMap();\n    }\n  }, [fetchMap, key]);\n  return mapData;\n};\n\nexport default useGetMapStorage;\n","import { useEffect, useRef } from \"react\";\n\nconst useSubsequentUpdate = (cb: any, deps: string) => {\n  const mounted = useRef(false);\n  useEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true;\n      return;\n    }\n    console.log(\"exec!\");\n    cb();\n  }, [deps]);\n};\n\nexport default useSubsequentUpdate;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 8px;\n  /* position: absolute; */\n  /* bottom: 0.5em; */\n  width: 100%;\n  font-size: 0.8em;\n  a {\n    &:visited {\n      color: var(--text-color);\n    }\n  }\n`;\n\nconst Info = () => {\n  return (\n    <Wrapper className={\"info\"}>\n      <span>\n        Data Source:{\" \"}\n        <a href=\"https://coinmarketcap.com/\" target=\"_blank\" rel=\"noreferrer\">\n          CoinMarketCap\n        </a>\n      </span>\n      &nbsp;\n      <span>\n        <a\n          href=\"https://github.com/YueminHu/crypto_watch\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Github\n        </a>\n      </span>\n    </Wrapper>\n  );\n};\n\nexport default Info;\n","import { useEffect, useRef, useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport Status from \"./Footer\";\nimport PriceCell from \"./Cell\";\n// import useGetMapStorage from \"./hooks/useGetMapStorage\";\n// import WSStatus from \"./Status\";\nimport AddToken from \"./Add\";\nimport useGetListings from \"./hooks/useGetListings\";\nimport useGetMapStorage from \"./hooks/useGetMapStorage\";\nimport useSubsequentUpdate from \"./hooks/useSubsequentUpdate\";\nimport eventEmitter from \"./utils/eventEmitter\";\nimport Info from \"./Info\";\n\nconst Separater = \"_\";\n\nconst LOCAL_KEY = \"LOCAL_KEY\";\nconst LOCAL_ID_KEY = \"LOCAL_ID_KEY\";\n\nconst Wrapper = styled.div`\n  text-align: left;\n  padding: 0px 8px;\n  /* padding-top: 8px; */\n`;\n\nconst HeadWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  > div:first-child {\n    flex-grow: 1;\n  }\n`;\n\nexport default function App() {\n  const [wsStatus, setWSStatus] = useState<number>(0);\n\n  const [prices, setPrices] = useState<\n    {\n      id: number;\n      price?: number;\n      p24h?: number;\n      slug?: string;\n      name?: string;\n    }[]\n  >(() => {\n    const ids = new URL(window.location.href).searchParams.get(\"ids\");\n    if (ids) {\n      return ids.split(Separater).map((id) => ({\n        id: Number(id) || 1,\n      }));\n    }\n    return [];\n  });\n\n  // console.log(prices);\n\n  const [expandStatus, setExpandStatus] = useState({});\n\n  // console.log(expandStatus);\n\n  const ids = prices.map(({ id }) => id);\n\n  const resubscribing = useRef(false);\n\n  const mapData = useGetMapStorage(LOCAL_KEY);\n\n  const WSInstance = useRef<WebSocket>();\n\n  const [refetchAPI, lastRefetch] = useGetListings(ids, setPrices);\n\n  const initWS = () => {\n    let WS;\n    try {\n      WS = new WebSocket(\"wss://stream.coinmarketcap.com/price/latest\");\n      WSInstance.current = WS;\n    } catch (e) {\n      console.log(\"reconnect!\");\n      setTimeout(() => {\n        initWS();\n        subscribeWS(ids);\n      }, 1000);\n    }\n  };\n\n  const closeWS = () => {\n    WSInstance.current?.close();\n  };\n\n  const subscribeWS = (ids: number[]) => {\n    if (!WSInstance.current) return;\n    const WS = WSInstance.current;\n    setWSStatus(WS.readyState);\n    WS.onopen = function () {\n      console.log(\"ws connected!\");\n      setWSStatus(WS.readyState);\n      if (resubscribing.current) {\n        resubscribing.current = false;\n      }\n      const param = {\n        method: \"subscribe\",\n        id: \"price\",\n        data: {\n          cryptoIds: ids,\n        },\n      };\n      WS.send(JSON.stringify(param));\n\n      WS.onmessage = function (res) {\n        const data = JSON.parse(res.data);\n        if (data?.d?.cr) {\n          const info = data.d.cr;\n          // console.log(info);\n          eventEmitter.emit(`WS-${info.id}`, info);\n          setPrices((prices) => {\n            return prices.map((p) => {\n              if (p.id === info.id) {\n                return {\n                  ...info,\n                  ...p,\n                  price: info.p,\n                  p24h: info.p24h,\n                };\n              }\n              return p;\n            });\n          });\n        } else {\n          console.log(data);\n        }\n      };\n      WS.addEventListener(\"close\", (e) => {\n        console.log(\"ws closed!\");\n        setWSStatus(WS.readyState);\n        if (!resubscribing.current) {\n          console.log(\"reconnecting...\");\n          refetchAPI();\n          setTimeout(() => {\n            initWS();\n            subscribeWS(ids);\n          }, 1000);\n        }\n      });\n    };\n  };\n\n  const reconnect = () => {\n    console.log(\"reconnect!\");\n    closeWS();\n    initWS();\n    subscribeWS(ids);\n  };\n\n  const handleAddOrRemove = (id: number, add?: boolean) => {\n    if (ids.includes(id) && add) {\n      return;\n    }\n    setPrices((prices) => {\n      const newPrices = add\n        ? [\n            ...prices,\n            {\n              id: id,\n            },\n          ]\n        : prices.filter((price) => price.id !== id);\n      return newPrices;\n    });\n  };\n\n  // const allExpanded = expandStatus.every((v) => v);\n\n  const handleExpand = (expand?: boolean) => {\n    if (expand) {\n      // setExpandStatus((e) => e.map((_) => 1));\n    } else {\n      setExpandStatus({});\n    }\n  };\n\n  const writeURL = (ids: string) => {\n    const url = new URL(window.location.href);\n    url.searchParams.set(\"ids\", ids);\n    window.history.replaceState(\"\", document.title, url);\n  };\n\n  useEffect(() => {\n    const idsStored = localStorage.getItem(LOCAL_ID_KEY);\n    const idsUrl = new URL(window.location.href).searchParams.get(\"ids\");\n    // console.log(idsStored, idsUrl);\n    if (idsStored !== idsUrl && idsStored) {\n      writeURL(idsStored);\n    }\n  }, []);\n\n  /**\n   * rewrite URL when id length / order changes\n   */\n  useSubsequentUpdate(() => {\n    const idsString = ids.join(Separater);\n    writeURL(idsString);\n    localStorage.setItem(LOCAL_ID_KEY, idsString);\n    // if (ids.length) {\n    // }\n  }, ids.join());\n\n  /**\n   * resubscribe when id length changes\n   */\n  useEffect(() => {\n    if (ids.length) {\n      resubscribing.current = true;\n      reconnect();\n    }\n  }, [ids.length]);\n\n  // console.log(prices)\n\n  return (\n    <div className=\"App\">\n      {/* <Gas /> */}\n      <HeadWrapper>\n        <AddToken\n          onAdd={(id: number) => handleAddOrRemove(id, true)}\n          mapData={mapData}\n        />\n        <button onClick={() => handleExpand(false)}>{\"Collapse All\"}</button>\n        {/* &nbsp;\n        <button onClick={() => handleExpand(true)}>{\"Expand\"}</button> */}\n      </HeadWrapper>\n      <Wrapper>\n        {prices.map((info: any, idx) => (\n          <PriceCell\n            name={mapData[info.id]?.symbol}\n            key={info.id}\n            info={info}\n            onRemove={(id: number) => handleAddOrRemove(id)}\n            prices={prices}\n            setPrices={setPrices}\n            idx={idx}\n            expandStatus={expandStatus}\n            setExpandStatus={setExpandStatus}\n          />\n        ))}\n      </Wrapper>\n      <Info />\n      {/* <button onClick={() => console.log(eventEmitter)}>Log!</button> */}\n      {/* <WSStatus /> */}\n      {ids.length ? (\n        <Status\n          wsStatus={wsStatus}\n          // wsInstance={WSInstance}\n          reconnect={reconnect}\n          lastRefetch={lastRefetch}\n        />\n      ) : null}\n\n      {/* <div>\n        <button onClick={() => closeWS()}>Disconnect</button>\n        <button\n          onClick={() => {\n            initWS();\n            subscribeWS(ids);\n          }}\n        >\n          Connect\n        </button>\n      </div> */}\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}