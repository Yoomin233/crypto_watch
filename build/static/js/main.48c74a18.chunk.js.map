{"version":3,"sources":["Footer.tsx","Cell.tsx","hooks/useGetMapStorage.ts","Status.tsx","Add.tsx","hooks/useGetListings.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Wrapper","styled","p","Footer","href","target","rel","CellWrapper","div","PriceCell","id","price","p24h","name","onRemove","lastPrice","useRef","isUp","useEffect","current","undefined","onClick","style","src","alt","className","toFixed","backgroundColor","Math","sqrt","abs","useGetMapStorage","key","useState","localStorage","getItem","JSON","parse","String","data","mapData","setMapData","fetchMap","useCallback","axios","get","then","storedData","cryptoCurrencyMap","reduce","prev","next","setItem","stringify","timeStamp","Date","console","log","WSStatus","wsInstance","reconnect","status","readyState","statusString","tabIndex","display","TokenList","AddToken","map","onAdd","search","setSearch","mapArr","Object","values","ref","focus","searchRes","filter","token","toLowerCase","includes","symbol","marginTop","value","onChange","e","placeholder","length","disabled","slice","r","setTimeout","useGetListings","ids","setter","join","priceData","cryptoCurrencyList","d","find","quotes","percentChange24h","App","setWSStatus","URL","window","location","searchParams","split","Number","prices","setPrices","resubscribing","WSInstance","initWS","WS","WebSocket","subscribeWS","onopen","param","method","cryptoIds","send","onmessage","res","cr","info","addEventListener","close","closeWS","handleAddOrRemove","add","url","set","history","replaceState","document","title","Add","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.48c74a18.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Wrapper = styled.p`\n  position: fixed;\n  bottom: 0;\n  margin: 0px auto;\n  font-size: 0.8em;\n  padding: 8px 0px;\n  width: 100%;\n  background-color: var(--background-color);\n  border-top: 1px solid var(--border-color);\n  > a {\n    color: var(--text-color);\n  }\n`;\n\nconst Footer = () => {\n  return (\n    <Wrapper>\n      Data Provider:{\" \"}\n      <a href=\"https://coinmarketcap.com/\" target=\"_blank\" rel=\"noreferrer\">\n        CoinMarketCap\n      </a>\n    </Wrapper>\n  );\n};\n\nexport default Footer;\n","import { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nconst CellWrapper = styled.div`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px;\n  /* margin-top: 8px; */\n  width: calc(50% - 17px);\n  /* display: inline-block; */\n  /* border-left: 1px solid #fff; */\n  border-radius: 4px;\n  cursor: pointer;\n  box-sizing: border-box;\n  user-select: none;\n  &:hover {\n    transform: translateY(-2px);\n  }\n  @media screen and (max-width: 450px) {\n    white-space: nowrap;\n    width: 100%;\n    border-left: none;\n  }\n  img {\n    width: 1.5em;\n    margin-right: 0.5em;\n    vertical-align: middle;\n  }\n  span.price {\n    font-weight: bold;\n    font-size: 1.1em;\n    &.up {\n      color: var(--up-color);\n    }\n    &.down {\n      color: var(--down-color);\n    }\n  }\n  span.percentage {\n    padding: 8px 4px;\n    border-radius: 4px;\n    color: #fff;\n    margin-left: 12px;\n    display: inline-block;\n    text-align: center;\n    width: 4.5em;\n  }\n`;\n\nconst PriceCell = ({ id, price, p24h, name, onRemove }: any) => {\n  const lastPrice = useRef(price);\n  const isUp = useRef(true);\n  useEffect(() => {\n    if (price !== lastPrice.current) {\n    //   console.log(\"update!\", price);\n      isUp.current = lastPrice.current < price || price === undefined;\n      lastPrice.current = price;\n    }\n    // console.log(\"price change!\", lastPrice.current, price);\n  }, [price]);\n  //   console.log(price)\n  //   const isUp = lastPrice.current < price || price === undefined;\n  //   const isEqual = lastPrice.current === price;\n  //   console.log(isEqual);\n  return (\n    <CellWrapper\n      onClick={() => onRemove(id)}\n      key={id}\n      style={\n        {\n          // color: price ? \"#efefef\" : \"#000\",\n        }\n      }\n    >\n      <span>\n        <img\n          src={`https://s2.coinmarketcap.com/static/img/coins/64x64/${id}.png`}\n          alt={id}\n        />\n        {name || \"unknown\"}\n      </span>\n      <span>\n        <span className={`price ${isUp.current ? \"up\" : \"down\"}`}>\n          {price ? price?.toFixed(4) : \"-\"}\n          {isUp.current ? \"↑\" : \"↓\"}\n        </span>\n        <span\n          className=\"percentage\"\n          style={{\n            backgroundColor:\n              p24h > 0\n                ? `rgba(0, 255, 0, ${Math.sqrt(Math.abs(p24h / 10))})`\n                : `rgba(255, 0, 0, ${Math.sqrt(Math.abs(p24h / 10))})`,\n          }}\n        >\n          {p24h ? `${p24h.toFixed(2)}%` : \"\"}\n        </span>\n      </span>\n    </CellWrapper>\n  );\n};\n\nexport default PriceCell;\n","import axios from \"axios\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nconst useGetMapStorage = (key: string) => {\n  const [mapData, setMapData] = useState<any>(() =>\n    localStorage.getItem(key)\n      ? JSON.parse(String(localStorage.getItem(key))).data\n      : {}\n  );\n  const fetchMap = useCallback(\n    () =>\n      axios\n        .get(\n          \"https://api.coinmarketcap.com/data-api/v3/map/all?cryptoAux=status&limit=10000&listing_status=active&start=1\"\n        )\n        .then(({ data }) => {\n          const storedData = data.data.cryptoCurrencyMap.reduce(\n            (prev: any, next: any) => {\n              prev[next.id] = next;\n              return prev;\n            },\n            {}\n          );\n          // console.log(storedData);\n          setMapData(storedData);\n          localStorage.setItem(\n            key,\n            JSON.stringify({\n              data: storedData,\n              timeStamp: +new Date(),\n            })\n          );\n        }),\n    [key]\n  );\n  useEffect(() => {\n    if (localStorage.getItem(key)) {\n      const timeStamp = JSON.parse(String(localStorage.getItem(key))).timeStamp;\n      if (timeStamp + 1000 * 3600 * 24 <= +new Date()) {\n        console.log(\"refetch!\");\n        fetchMap();\n      }\n    } else {\n      console.log(\"init fetch!\");\n      fetchMap();\n    }\n  }, [fetchMap, key]);\n  return mapData;\n};\n\nexport default useGetMapStorage;\n","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  position: fixed;\n  bottom: 3em;\n  right: 12px;\n  max-width: 0.8em;\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 1em;\n  transition: all 0.3s ease-in-out;\n  cursor: pointer;\n  &:focus-within {\n    max-width: 20em;\n  }\n  > span:first-child {\n    width: 0.8em;\n    height: 0.8em;\n    border-radius: 50%;\n    display: inline-block;\n    margin-right: 0.5em;\n    vertical-align: middle;\n  }\n  > span.connecting {\n    background-color: yellow;\n  }\n  > span.connected {\n    background-color: var(--up-color);\n  }\n  > span.disconnected {\n    background-color: var(--down-color);\n  }\n`;\n\nconst WSStatus = ({\n  wsInstance,\n  reconnect,\n}: {\n  wsInstance: React.MutableRefObject<WebSocket | undefined>;\n  reconnect: any;\n}) => {\n  //   useEffect(() => {\n  //     wsInstance.current?.addEventListener(\"close\", () => {\n  //       console.log(\"closed\");\n  //     });\n  //   }, [wsInstance.current]);\n  //   const [expand, setExpand] = useState(false);\n  const status = wsInstance.current?.readyState;\n  //   console.log(status);\n  const statusString =\n    status === 0 || status === undefined\n      ? \"connecting\"\n      : status === 1\n      ? \"connected\"\n      : status === 3\n      ? \"disconnected\"\n      : undefined;\n  return (\n    <Wrapper\n      //   onClick={() => setExpand(true)}\n      //   className={expand ? \"expand\" : undefined}\n      tabIndex={-1}\n      //   onBlur={() => setExpand(false)}\n    >\n      <span className={statusString}></span>\n      {`WS Status: ${statusString}`}\n      <button\n        onClick={reconnect}\n        style={{\n          display: status === 3 ? undefined : \"none\",\n        }}\n      >\n        Reconnect\n      </button>\n    </Wrapper>\n  );\n};\n\nexport default WSStatus;\n","import { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst TokenList = styled.div`\n  cursor: pointer;\n  margin: 4px auto;\n  > img {\n    width: 1.5em;\n    margin-right: 0.5em;\n    vertical-align: middle;\n  }\n`;\n\nconst AddToken = ({ map, onAdd }: any) => {\n  const [search, setSearch] = useState(\"\");\n  const mapArr = Object.values(map);\n  const ref = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    ref.current?.focus();\n  }, []);\n\n  const searchRes = search\n    ? mapArr.filter(\n        (token: any) =>\n          token.name.toLowerCase().includes(search.toLowerCase()) ||\n          token.symbol.toLowerCase().includes(search.toLowerCase())\n      )\n    : [];\n  return (\n    <div\n      style={{\n        marginTop: 24,\n      }}\n    >\n      <input\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n        placeholder={mapArr.length ? \"Type Something...\" : \"Loading...\"}\n        disabled={!mapArr.length}\n        ref={ref}\n      />\n      <div>\n        {searchRes.slice(0, 10).map((r: any) => (\n          <TokenList\n            key={r.id}\n            onClick={() => {\n              onAdd(r.id);\n              setSearch(\"\");\n              setTimeout(() => {\n                ref.current?.focus();\n              }, 500);\n            }}\n          >\n            <img\n              src={`https://s2.coinmarketcap.com/static/img/coins/64x64/${r.id}.png`}\n              alt={r.id}\n            />\n            {r.name}\n          </TokenList>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AddToken;\n","import axios from \"axios\";\nimport { useEffect } from \"react\";\n\nconst useGetListings = (\n  ids: number[],\n  setter: React.Dispatch<\n    React.SetStateAction<\n      {\n        id: number;\n        price?: number | undefined;\n        p24h?: number | undefined;\n      }[]\n    >\n  >\n) => {\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.coinmarketcap.com/data-api/v3/cryptocurrency/listing?ids=${ids.join(\n          \",\"\n        )}&aux=ath`\n      )\n      .then(({ data }) => {\n        const priceData = data.data.cryptoCurrencyList;\n        setter((data) => {\n          return data.map((d) => {\n            const find = priceData.find((p: any) => p.id === d.id);\n            // console.log(find);\n            // console.log(d.id);\n            if (find) {\n              return {\n                ...d,\n                price: find.quotes?.[0]?.price || 0,\n                p24h: find.quotes?.[0]?.percentChange24h || 0,\n              };\n            } else {\n              return d;\n            }\n          });\n          //   return data;\n          //   return data.reduce((prev, next) => {\n          //     console.\n          //   }, [])\n        });\n        // data.data.cryptoCurrencyList.map((token: any) => {\n        //   console.log(token);\n        // });\n      });\n  }, [ids.length, setter]);\n};\n\nexport default useGetListings;\n","import { useEffect, useRef, useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport Footer from \"./Footer\";\nimport PriceCell from \"./Cell\";\nimport useGetMapStorage from \"./hooks/useGetMapStorage\";\nimport WSStatus from \"./Status\";\nimport AddToken from \"./Add\";\nimport useGetListings from \"./hooks/useGetListings\";\n\nconst LOCAL_KEY = \"LOCAL_KEY\";\nconst Separater = \"_\";\n\nconst Wrapper = styled.div`\n  text-align: left;\n  padding: 0px 8px;\n`;\n\nexport default function App() {\n  const [wsStatus, setWSStatus] = useState<number>(0);\n  const [prices, setPrices] = useState<\n    {\n      id: number;\n      price?: number;\n      p24h?: number;\n    }[]\n  >(() => {\n    const ids = new URL(window.location.href).searchParams.get(\"ids\");\n    if (ids) {\n      return ids.split(Separater).map((id) => ({\n        id: Number(id),\n      }));\n    }\n    return [];\n  });\n\n  const ids = prices.map(({ id }) => id);\n\n  const resubscribing = useRef(false);\n\n  const mapData = useGetMapStorage(LOCAL_KEY);\n\n  useGetListings(ids, setPrices);\n\n  const WSInstance = useRef<WebSocket>();\n\n  const initWS = () => {\n    let WS;\n    try {\n      WS = new WebSocket(\"wss://stream.coinmarketcap.com/price/latest\");\n      WSInstance.current = WS;\n    } catch (e) {\n      console.log(e);\n      setTimeout(() => {\n        initWS();\n        subscribeWS(ids);\n      }, 5000);\n    }\n  };\n\n  const closeWS = () => {\n    WSInstance.current?.close();\n  };\n\n  const subscribeWS = (ids: number[]) => {\n    if (!WSInstance.current) return;\n    const WS = WSInstance.current;\n    setWSStatus(WS.readyState);\n    WS.onopen = function () {\n      console.log(\"ws connected!\");\n      setWSStatus(WS.readyState);\n      if (resubscribing.current) {\n        resubscribing.current = false;\n      }\n      const param = {\n        method: \"subscribe\",\n        id: \"price\",\n        data: {\n          cryptoIds: ids,\n        },\n      };\n      WS.send(JSON.stringify(param));\n\n      WS.onmessage = function (res) {\n        const data = JSON.parse(res.data);\n        if (data?.d?.cr) {\n          const info = data.d.cr;\n          setPrices((prices) => {\n            return prices.map((p) => {\n              if (p.id === info.id) {\n                return {\n                  ...p,\n                  price: info.p,\n                  p24h: info.p24h,\n                };\n              }\n              return p;\n            });\n          });\n        } else {\n          console.log(data);\n        }\n      };\n      WS.addEventListener(\"close\", (e) => {\n        console.log(\"ws closed!\");\n        setWSStatus(WS.readyState);\n        if (!resubscribing.current) {\n          console.log(\"reconnecting...\");\n          setTimeout(() => {\n            console.log(ids);\n            initWS();\n            subscribeWS(ids);\n          }, 5000);\n        }\n      });\n    };\n  };\n\n  const reconnect = () => {\n    console.log(\"reconnect!\");\n    closeWS();\n    initWS();\n    subscribeWS(ids);\n  };\n\n  const handleAddOrRemove = (id: number, add?: boolean) => {\n    if (ids.includes(id) && add) {\n      return;\n    }\n    setPrices((prices) => {\n      const newPrices = add\n        ? [\n            ...prices,\n            {\n              id: id,\n            },\n          ]\n        : prices.filter((price) => price.id !== id);\n      return newPrices;\n    });\n  };\n\n  useEffect(() => {\n    if (ids.length) {\n      resubscribing.current = true;\n      reconnect();\n      const url = new URL(window.location.href);\n      url.searchParams.set(\"ids\", ids.join(Separater));\n      window.history.replaceState(\"\", document.title, url);\n    }\n  }, [ids.length]);\n\n  return (\n    <div className=\"App\">\n      {/* <Gas /> */}\n      <Wrapper>\n        {prices.map(({ id, p24h, price }: any) => (\n          <PriceCell\n            key={id}\n            id={id}\n            p24h={p24h}\n            price={price}\n            name={mapData[id]?.name}\n            onRemove={(id: number) => handleAddOrRemove(id)}\n          />\n        ))}\n      </Wrapper>\n      <WSStatus wsInstance={WSInstance} reconnect={reconnect} />\n      <Footer />\n      <AddToken\n        map={mapData}\n        onAdd={(id: number) => handleAddOrRemove(id, true)}\n      />\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}