{"version":3,"sources":["utils/eventEmitter.ts","components/useUpdateData.ts","components/Spinner.tsx","context/index.tsx","Cell/styled.ts","Cell/index.tsx","utils/number.ts","Footer.tsx","Add.tsx","hooks/useGetListings.ts","hooks/useGetMapStorage.ts","hooks/useSubsequentUpdate.ts","hooks/useWebSocket.ts","Info.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EventEmitter","cbs","this","event","cb","push","filter","func","length","data","forEach","TimeInterval","APIHost","useUpdateData","id","period","useState","setData","loading","setLoading","getData","useCallback","axios","get","then","mappedData","Object","entries","points","map","key","value","time","Number","v","catch","e","finally","useEffect","subscriber","eventEmitter","subscribe","wsData","lastData","lastDataTime","Date","Math","floor","p","console","log","unsubscribe","spin","keyframes","SpinnerWrapper","styled","span","Spinner","GlobalContext","React","createContext","setPeriod","GlobalContextProvider","children","Provider","Wrapper","div","CellWrapper","MoreSection","ChartsWrapper","InputWrapper","LazyChart","lazy","ChartsGroup","memo","useContext","globalPeriod","setGlobalPeriod","className","undefined","onClick","Charts","fallback","PriceCell","name","info","onRemove","prices","setPrices","idx","expandStatus","setExpandStatus","edit","p24h","price","slug","symbol","propsAmount","amount","lastPrice","useRef","isUp","setIsUp","setAmount","current","setTimeout","num","onMove","idxOffset","temp","isExpanded","priceDisplay","useMemo","toFixed","max","log10","count","determineFraction","href","target","rel","stopPropagation","src","alt","replace","disabled","style","backgroundColor","sqrt","abs","placeholder","type","onChange","newAmount","elementIndex","findIndex","token","Footer","wsStatus","lastRefetch","reconnect","status","statusString","TokenList","AddToken","onAdd","mapData","search","setSearch","mapArr","values","ref","searchRes","toLowerCase","includes","slice","r","focus","useGetListings","ids","setter","setLastRefetch","refetch","join","priceData","cryptoCurrencyList","d","find","quotes","percentChange24h","useGetMapStorage","localStorage","getItem","JSON","parse","String","setMapData","fetchMap","storedData","cryptoCurrencyMap","reduce","prev","next","setItem","stringify","timeStamp","useSubsequentUpdate","deps","mounted","useWbSocket","onClose","onMessage","setWSStatus","WSInstance","resubscribing","initWS","WS","WebSocket","subscribeWS","readyState","onopen","param","method","cryptoIds","send","onmessage","res","addEventListener","close","closeWS","instance","create","headers","Authorization","Info","patch","long_url","navigator","clipboard","writeText","link","alert","AMOUNT_SEPARATOR","LOCAL_ID_KEY","HeadWrapper","getIds","idsStored","URL","window","location","searchParams","hasNewFormat","match","split","parseInt","App","setEdit","amounts","refetchAPI","cr","emit","handleAddOrRemove","add","idsString","toString","url","set","history","replaceState","document","title","writeURL","Add","newPrices","sort","a","b","Infinity","some","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.70e5c6ab.chunk.js","sourcesContent":["type Events = string;\n\nclass EventEmitter {\n  cbs: {\n    [key: string]: any[];\n  };\n  constructor() {\n    this.cbs = {};\n  }\n  subscribe(event: Events, cb: any) {\n    if (!this.cbs[event]) {\n      this.cbs[event] = [];\n    }\n    this.cbs[event].push(cb);\n    return cb;\n    // this.cbs.push(cb);\n  }\n  unsubscribe(event: Events, cb: any) {\n    if (this.cbs[event]) {\n      this.cbs[event] = this.cbs[event].filter((func) => func !== cb);\n      if (this.cbs[event].length === 0) {\n        delete this.cbs[event];\n      }\n    }\n  }\n  emit(event: Events, data: any) {\n    if (this.cbs[event]) {\n      this.cbs[event].forEach((cb) => cb(data));\n    }\n  }\n}\n\nexport default new EventEmitter();\n","import axios from \"axios\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport eventEmitter from \"../utils/eventEmitter\";\n\nconst TimeInterval: any = {\n  \"1D\": 300,\n  \"7D\": 300,\n  \"1M\": 3600,\n  \"3M\": 3600,\n  \"1Y\": 86400,\n};\n\n// export const APIHost = 'https://api.coinmarketcap.com'\n\nexport const APIHost = process.env.NODE_ENV === 'production' ? 'https://yoomin.us/api/proxy/crypto-watch' : 'https://yoomin.us/api/proxy/crypto-watch'\n\n\nconst useUpdateData = (id: number, period: string): [any[], boolean] => {\n  const [data, setData] = useState<any[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  //   const latestNewLine = useRef<number>(0);\n\n  const getData = useCallback(() => {\n    // clear();\n    setLoading(true);\n    return axios\n      .get(\n        `${APIHost}/data-api/v3/cryptocurrency/detail/chart?id=${id}&range=${period}`\n      )\n      .then(({ data }) => {\n        const mappedData = Object.entries<any>(data.data.points).map(\n          ([key, value]) => ({\n            time: Number(key),\n            value: value.v[0],\n          })\n        );\n        setData(mappedData);\n        return mappedData;\n      })\n      .catch((e) => {\n        return [];\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n\n    // return () => eventEmitter.unsubscribe(`WS-${id}`, subscriber);\n  }, [id, period]);\n\n  useEffect(() => {\n    getData();\n    const subscriber = eventEmitter.subscribe(`WS-${id}`, (wsData: any) => {\n      setData((data) => {\n        if (!data.length) return data;\n        const lastData = data[data.length - 1];\n        const lastDataTime = lastData.time * 1000;\n        const now = Number(new Date());\n        const shouldInsertNewData = TimeInterval[period] * 1000;\n        // console.log(now, lastDataTime, shouldInsertNewData);\n        if (now - lastDataTime >= shouldInsertNewData) {\n          // console.log(\"insert new line!\");\n          return [\n            ...data,\n            {\n              time: Math.floor(Number(new Date()) / 1000),\n              value: wsData.p,\n            },\n          ];\n        } else {\n          // lastData.time = now\n          // console.log(\"in-place update!\");\n          lastData.value = wsData.p;\n          return [...data];\n        }\n        // console.log(lastDataTime);\n        // // console.log(data);\n        // return data;\n      });\n    });\n    return () => {\n      console.log(\"unsubscribe!\");\n      eventEmitter.unsubscribe(`WS-${id}`, subscriber);\n    };\n  }, [id, period, getData]);\n\n  return [data, loading];\n};\n\nexport default useUpdateData;\n","import styled, { keyframes } from \"styled-components\";\n\nconst spin = keyframes`\n    to {\n        transform: rotate(1turn);\n    }\n`;\n\nconst SpinnerWrapper = styled.span`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-grow: 1;\n  > span {\n    border: 3px solid var(--border-color);\n    border-radius: 50%;\n    border-top-color: var(--text-color);\n    width: 1em;\n    height: 1em;\n    animation: ${spin} 1s linear 0s infinite;\n  }\n`;\n\nconst Spinner = () => {\n  return (\n    <SpinnerWrapper>\n      <span></span>\n    </SpinnerWrapper>\n  );\n};\n\nexport default Spinner;\n","import React, { useState } from \"react\";\n\ntype Periods = \"1D\" | \"7D\" | \"1M\" | \"3M\" | \"1Y\";\n\nexport const GlobalContext = React.createContext<{\n  period: Periods;\n  setPeriod: React.Dispatch<React.SetStateAction<Periods>>;\n}>({\n  period: \"1D\",\n  setPeriod: () => void 0,\n});\n\nexport const GlobalContextProvider: React.FC = ({ children }) => {\n  const [period, setPeriod] = useState<Periods>(\"1D\");\n  return (\n    <GlobalContext.Provider\n      value={{\n        period,\n        setPeriod,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n  display: inline-block;\n  padding: 6px 8px;\n  /* margin-top: 8px; */\n  vertical-align: top;\n  /* display: inline-block; */\n  /* border-left: 1px solid #fff; */\n  /* border-radius: 4px; */\n  cursor: pointer;\n  box-sizing: border-box;\n  user-select: none;\n  white-space: nowrap;\n  width: 33%;\n  /* border-bottom: 1px solid var(--border-color); */\n  @media screen and (min-width: 1200px) {\n    width: 25%;\n  }\n  @media screen and (min-width: 451px) and (max-width: 750px) {\n    width: calc(50%);\n  }\n  @media screen and (max-width: 450px) {\n    width: 100%;\n    /* overflow: hidden; */\n  }\n  button {\n    font-size: 0.8em;\n    /* height: 80%; */\n  }\n  .buttons {\n    display: grid;\n    grid-auto-flow: column;\n    gap: 4px;\n    margin-left: 8px;\n    /* position: absolute; */\n    right: 0;\n    top: 0;\n    height: 100%;\n    z-index: 10;\n    background-color: var(--background-color);\n    /* transform: translateX(calc(101%)); */\n    transition: all 0.3s ease;\n    /* &.edit {\n      transform: none;\n    } */\n    /* overflow: hidden; */\n    /* > button {\n    } */\n    /* background: red; */\n  }\n`;\n\nexport const CellWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  /* &:hover {\n    transform: translateY(-2px);\n  } */\n  @media screen and (max-width: 450px) {\n    > a:first-child {\n      max-width: 45vw;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n  > span.metrics {\n    display: flex;\n    align-items: center;\n  }\n  > a {\n    color: inherit;\n    font-size: 1.1rem;\n    text-decoration: none;\n    font-weight: bold;\n    > span {\n      display: inline-flex;\n      flex-direction: column;\n      vertical-align: middle;\n      > span:nth-child(2) {\n        font-size: 0.8rem;\n        opacity: 0.7;\n      }\n    }\n  }\n  img {\n    width: 2rem;\n    margin-right: 0.5em;\n    vertical-align: middle;\n  }\n  span.price {\n    font-weight: bold;\n    font-size: 1.1rem;\n    transition: all 0.1s linear;\n    display: inline-flex;\n    flex-direction: column;\n    align-items: flex-end;\n    vertical-align: bottom;\n    &.up {\n      color: var(--up-color);\n    }\n    &.down {\n      color: var(--down-color);\n    }\n    > span:nth-child(2) {\n      font-size: 0.8rem;\n      opacity: 0.7;\n    }\n  }\n  span.percentage {\n    padding: 4px 8px;\n    border-radius: 4px;\n    color: #fff;\n    margin-left: 12px;\n    display: inline-block;\n    text-align: center;\n    /* width: 4.5em; */\n  }\n`;\n\nexport const MoreSection = styled.div`\n  padding-top: 8px;\n  /* border-bottom: 1px solid var(--border-color); */\n  justify-content: space-between;\n  display: flex;\n  position: relative;\n  overflow: hidden;\n`;\n\nexport const ChartsWrapper = styled.div`\n  display: flex;\n  flex-grow: 1;\n  .switch {\n    display: grid;\n    margin-right: 8px;\n    > span {\n      border: 1px solid transparent;\n      border-top-left-radius: 6px;\n      border-bottom-left-radius: 6px;\n      padding: 2px 4px;\n      border-right-color: #1fe230;\n      &.selected {\n        /* color: yellow; */\n        border-color: #1fe230;\n        border-right-color: transparent;\n      }\n    }\n  }\n  img {\n    width: 100%;\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  margin: 8px 0px 0px;\n  input {\n    border-bottom: none;\n    /* width: auto; */\n    flex-grow: 1;\n  }\n  button {\n    cursor: pointer;\n  }\n  span {\n    padding-top: 2px;\n  }\n`;\n","import {\n  lazy,\n  memo,\n  Suspense,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n// import styled from \"styled-components\";\n// import ImgLoading from \"./components/ImgLoading\";\nimport Spinner from \"../components/Spinner\";\nimport { GlobalContext } from \"../context\";\nimport { abbreviateNumber, determineFraction } from \"../utils/number\";\nimport {\n  CellWrapper,\n  ChartsWrapper,\n  InputWrapper,\n  MoreSection,\n  Wrapper,\n} from \"./styled\";\n\nconst LazyChart = lazy(() => import(\"../components/chart\"));\n\nconst ChartsGroup = memo<any>(({ id = 1 }) => {\n  const { period: globalPeriod, setPeriod: setGlobalPeriod } =\n    useContext(GlobalContext);\n  const [period, setPeriod] = useState(globalPeriod);\n  useEffect(() => {\n    setGlobalPeriod(period);\n  }, [setGlobalPeriod, period]);\n  return (\n    <ChartsWrapper>\n      <div className='switch'>\n        <span\n          className={period === \"1D\" ? \"selected\" : undefined}\n          onClick={() => setPeriod(\"1D\")}\n        >\n          24h\n        </span>\n        <span\n          className={period === \"7D\" ? \"selected\" : undefined}\n          onClick={() => setPeriod(\"7D\")}\n        >\n          7D\n        </span>\n        <span\n          className={period === \"1M\" ? \"selected\" : undefined}\n          onClick={() => setPeriod(\"1M\")}\n        >\n          1M\n        </span>\n        <span\n          className={period === \"3M\" ? \"selected\" : undefined}\n          onClick={() => setPeriod(\"3M\")}\n        >\n          3M\n        </span>\n        <span\n          className={period === \"1Y\" ? \"selected\" : undefined}\n          onClick={() => setPeriod(\"1Y\")}\n        >\n          1Y\n        </span>\n      </div>\n      <Charts id={id} period={period} />\n    </ChartsWrapper>\n  );\n});\n\nconst Charts = ({ id = 1, period = \"1D\" }) => {\n  return (\n    <Suspense fallback={<Spinner />}>\n      <LazyChart id={id} period={period} />\n    </Suspense>\n  );\n};\n\nconst PriceCell = memo(\n  ({\n    name,\n    info,\n    onRemove,\n    prices,\n    setPrices,\n    idx,\n    expandStatus,\n    setExpandStatus,\n    edit,\n  }: any) => {\n    const { id, p24h, price, slug, symbol, amount: propsAmount } = info;\n    const lastPrice = useRef(price);\n    const [isUp, setIsUp] = useState<1 | 0 | -1>(0);\n\n    const [amount, setAmount] = useState(propsAmount);\n\n    useEffect(() => {\n      if (\n        price !== lastPrice.current &&\n        price !== undefined &&\n        lastPrice.current !== undefined\n      ) {\n        if (lastPrice.current < price) {\n          setIsUp(1);\n        } else {\n          setIsUp(-1);\n        }\n        setTimeout(() => setIsUp(0), 1000);\n      }\n      lastPrice.current = price;\n    }, [price]);\n\n    const onMove = (isUp?: boolean) => {\n      const idxOffset = isUp ? -1 : 1;\n      const temp = prices[idx + idxOffset];\n      prices[idx + idxOffset] = prices[idx];\n      prices[idx] = temp;\n\n      setPrices([...prices]);\n    };\n\n    const isExpanded = !!expandStatus[id];\n\n    const priceDisplay = useMemo(() => {\n      return price ? price.toFixed(determineFraction(price)) : \"-\";\n    }, [price]);\n\n    // console.log(priceDisplay, typeof priceDisplay);\n\n    return (\n      <Wrapper>\n        <CellWrapper\n          key={id}\n          onClick={() => {\n            // console.log(\"click!\", expand);\n            expandStatus[id] = !expandStatus[id];\n            setExpandStatus({ ...expandStatus });\n          }}\n        >\n          <a\n            href={`https://coinmarketcap.com/currencies/${slug}/`}\n            target='_blank'\n            rel='noreferrer'\n            onClick={(e) => e.stopPropagation()}\n          >\n            <img\n              src={`https://s2.coinmarketcap.com/static/img/coins/64x64/${id}.png`}\n              alt={id}\n            />\n            <span>\n              <span>{name || symbol || \"unknown\"}</span>\n              {amount > 0 && <span>Balance: {abbreviateNumber(amount)}</span>}\n            </span>\n          </a>\n          {edit ? (\n            <div className={`buttons`}>\n              <button onClick={() => onMove(true)} disabled={idx === 0}>\n                ⇧\n              </button>\n              <button\n                onClick={() => onMove()}\n                disabled={idx === prices.length - 1}\n              >\n                ⇩\n              </button>\n              <button onClick={() => onRemove(id)} className='danger'>\n                ❌\n              </button>\n            </div>\n          ) : (\n            <span className='metrics'>\n              <span\n                className={`price ${\n                  isUp === 1 ? \"up\" : isUp === -1 ? \"down\" : \"\"\n                }`}\n              >\n                {amount > 0 && !!price && (\n                  <span>${(price * amount).toFixed(2)}</span>\n                )}\n                <span>\n                  {amount > 0 && !!price && \"@ \"}${priceDisplay}\n                </span>\n              </span>\n              <span\n                className='percentage'\n                style={{\n                  backgroundColor:\n                    p24h > 0\n                      ? `rgba(0, 255, 0, ${Math.max(\n                          0.5,\n                          Math.sqrt(Math.abs(p24h / 10))\n                        )})`\n                      : `rgba(255, 0, 0, ${Math.max(\n                          0.5,\n                          Math.sqrt(Math.abs(p24h / 10))\n                        )})`,\n                }}\n              >\n                {p24h ? `${p24h.toFixed(2)}%` : \"\"}\n              </span>\n            </span>\n          )}\n        </CellWrapper>\n        {isExpanded && (\n          <InputWrapper>\n            <span>Balance: </span>\n            <input\n              placeholder='input amount...'\n              type={\"number\"}\n              value={amount}\n              onChange={(e) => {\n                const newAmount = Number(e.target.value);\n                setAmount(newAmount);\n                const elementIndex = prices.findIndex(\n                  (token: any) => token.id === id\n                );\n                if (elementIndex >= 0) {\n                  prices[elementIndex] = {\n                    ...prices[elementIndex],\n                    amount: newAmount,\n                  };\n                  setPrices([...prices]);\n                }\n              }}\n            ></input>\n            {/* <button\n              onClick={() => {\n                // console.log(prices);\n                \n              }}\n            >\n              OK\n            </button> */}\n          </InputWrapper>\n        )}\n\n        {/* <LazyRender show={isExpanded}> */}\n        {isExpanded && (\n          <MoreSection>\n            <ChartsGroup id={id} />\n          </MoreSection>\n        )}\n        {/* </LazyRender> */}\n      </Wrapper>\n    );\n  }\n);\n\nexport default PriceCell;\n","export const determineFraction = (num: number) => {\n  if (num >= 1) {\n    return Math.max(1, 4 - Math.floor(Math.log10(num)));\n  } else {\n    let count = -2;\n    // let num = 0.000001;\n    while (1 - num >= 0) {\n      num *= 10;\n      count += 1;\n    }\n    return Math.max(4, 4 + count);\n  }\n};\n\nexport const abbreviateNumber = (num: number) => {\n  if (num >= 1000000) {\n    return (num / 1000000).toFixed(2).replace(/0+$/, \"\").replace(/\\.$/, \"\") + \"M\";\n  }\n  if (num >= 1000) {\n    return (num / 1000).toFixed(2).replace(/0+$/, \"\").replace(/\\.$/, \"\") + \"K\";\n  }\n  return num;\n};\n","import styled from \"styled-components\";\n\n// const;\n\nconst Wrapper = styled.p`\n  position: fixed;\n  bottom: 0;\n  margin: 0px auto;\n  font-size: 0.8em;\n  padding: 8px;\n  width: 100%;\n  background-color: var(--background-color);\n  /* border-top: 1px solid var(--border-color); */\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: 1fr 1fr;\n  align-items: center;\n  transition: all 0.3s ease-in-out, transform 0.3s linear 3s;\n\n  backdrop-filter: blur(6px);\n  a {\n    color: var(--text-color);\n    color: inherit;\n  }\n\n  &.Connecting {\n    background-color: yellow;\n    color: #000;\n  }\n  &.Connected {\n    background-color: rgba(0, 255, 0, 0.33);\n    transform: translateY(calc(100% - 4px));\n  }\n  &.Disconnected {\n    background-color: var(--down-color);\n  }\n  > *:first-child {\n    justify-self: start;\n  }\n  > *:last-child {\n    justify-self: end;\n  }\n`;\n\nconst Footer = ({\n  wsStatus,\n  lastRefetch,\n  reconnect,\n}: // reconnect,\n{\n  wsStatus: number;\n  lastRefetch: Date;\n  reconnect: any;\n}) => {\n  const status = wsStatus;\n  //   console.log(status);\n  const statusString =\n    status === 0 || status === undefined\n      ? \"Connecting\"\n      : status === 1\n      ? \"Connected\"\n      : status === 3\n      ? \"Disconnected\"\n      : undefined;\n  return (\n    <Wrapper className={statusString}>\n      <span>\n        <i>\n          {((+new Date() - Number(lastRefetch)) / 1000).toFixed(0) +\n            \" Seconds ago\"}\n        </i>\n      </span>\n      <span>\n        <i>{statusString}</i>\n        {status === 3 && <button onClick={reconnect}>Reconnect</button>}\n      </span>\n    </Wrapper>\n  );\n};\n\nexport default Footer;\n","import { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst TokenList = styled.div`\n  cursor: pointer;\n  margin: 4px auto;\n  > img {\n    width: 1.5em;\n    margin-right: 0.5em;\n    vertical-align: middle;\n  }\n`;\n\nconst Wrapper = styled.div`\n  margin: 12px 0px;\n  > div {\n    position: absolute;\n    background: var(--background-color);\n    border: 1px solid var(--border-color);\n    border-radius: 4px;\n    width: 100%;\n    text-align: left;\n    padding-left: 8px;\n    z-index: 10;\n  }\n`;\n\nconst AddToken = ({ onAdd, mapData }: any) => {\n  const [search, setSearch] = useState(\"\");\n  const mapArr = Object.values(mapData);\n  const ref = useRef<HTMLInputElement>(null);\n\n  // useEffect(() => {\n  //   ref.current?.focus();\n  // }, []);\n\n  const searchRes = search\n    ? mapArr.filter(\n        (token: any) =>\n          token.name.toLowerCase().includes(search.toLowerCase()) ||\n          token.symbol.toLowerCase().includes(search.toLowerCase())\n      )\n    : [];\n  return (\n    <Wrapper>\n      <input\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n        placeholder={mapArr.length ? \"Try 'Bitcoin'\" : \"Loading...\"}\n        disabled={!mapArr.length}\n        ref={ref}\n      />\n      {searchRes.length ? (\n        <div>\n          {searchRes.slice(0, 10).map((r: any) => (\n            <TokenList\n              key={r.id}\n              onClick={() => {\n                onAdd(r.id);\n                setSearch(\"\");\n                setTimeout(() => {\n                  ref.current?.focus();\n                }, 500);\n              }}\n            >\n              <img\n                src={`https://s2.coinmarketcap.com/static/img/coins/64x64/${r.id}.png`}\n                alt={r.id}\n              />\n              {r.name}\n            </TokenList>\n          ))}\n        </div>\n      ) : null}\n    </Wrapper>\n  );\n};\n\nexport default AddToken;\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { APIHost } from \"../components/useUpdateData\";\n\nconst useGetListings = (\n  ids: number[],\n  setter: React.Dispatch<\n    React.SetStateAction<\n      {\n        id: number;\n        price?: number | undefined;\n        p24h?: number | undefined;\n      }[]\n    >\n  >\n  // refetch: boolean\n): [() => Promise<any>, Date] => {\n  // console.log(refetch);\n\n  const [lastRefetch, setLastRefetch] = useState(new Date());\n\n  const refetch = () =>\n    axios\n      .get(\n        `${APIHost}/data-api/v3/cryptocurrency/listing?ids=${ids.join(\n          \",\"\n        )}&aux=ath`\n      )\n      .then(({ data }) => {\n        if (!data?.data) return;\n        const priceData = data.data.cryptoCurrencyList;\n        setLastRefetch(new Date());\n        setter((data) => {\n          return data.map((d) => {\n            const find = priceData.find((p: any) => p.id === d.id);\n            // console.log(find);\n            // console.log(d.id);\n            if (find) {\n              return {\n                ...d,\n                price: find.quotes?.[0]?.price || 0,\n                p24h: find.quotes?.[0]?.percentChange24h || 0,\n                name: find.name,\n                slug: find.slug,\n              };\n            } else {\n              return d;\n            }\n          });\n        });\n      });\n  useEffect(() => {\n    refetch();\n    // if (!refetch) return;\n    // console.log(\"call!!\");\n  }, [ids.length, setter]);\n  return [refetch, lastRefetch];\n};\n\nexport default useGetListings;\n","import axios from \"axios\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { APIHost } from \"../components/useUpdateData\";\n\nconst useGetMapStorage = (key: string) => {\n  const [mapData, setMapData] = useState<any>(() =>\n    localStorage.getItem(key)\n      ? JSON.parse(String(localStorage.getItem(key))).data\n      : {}\n  );\n  const fetchMap = useCallback(\n    () =>\n      axios\n        .get(\n          `${APIHost}/data-api/v3/map/all?cryptoAux=status&limit=10000&listing_status=active&start=1`\n        )\n        .then(({ data }) => {\n          const storedData = data.data.cryptoCurrencyMap.reduce(\n            (prev: any, next: any) => {\n              prev[next.id] = next;\n              return prev;\n            },\n            {}\n          );\n          // console.log(storedData);\n          setMapData(storedData);\n          localStorage.setItem(\n            key,\n            JSON.stringify({\n              data: storedData,\n              timeStamp: +new Date(),\n            })\n          );\n        }),\n    [key]\n  );\n  useEffect(() => {\n    if (localStorage.getItem(key)) {\n      const timeStamp = JSON.parse(String(localStorage.getItem(key))).timeStamp;\n      if (timeStamp + 1000 * 3600 * 24 <= Number(new Date())) {\n        console.log(\"refetch!\");\n        fetchMap();\n      }\n    } else {\n      console.log(\"init fetch!\");\n      fetchMap();\n    }\n  }, [fetchMap, key]);\n  return mapData;\n};\n\nexport default useGetMapStorage;\n","import { useEffect, useRef } from \"react\";\n\nconst useSubsequentUpdate = (cb: any, deps: string) => {\n  const mounted = useRef(false);\n  useEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true;\n      return;\n    }\n    cb();\n  }, [deps]);\n};\n\nexport default useSubsequentUpdate;\n","import { useEffect, useRef, useState } from \"react\";\n\nconst useWbSocket = ({\n  onClose,\n  onMessage,\n  ids,\n}: {\n  onClose: any;\n  onMessage: any;\n  ids: any;\n}) => {\n  const [wsStatus, setWSStatus] = useState<number>(0);\n  const WSInstance = useRef<WebSocket>();\n  const resubscribing = useRef(false);\n\n  useEffect(() => {\n    if (ids.length) {\n      resubscribing.current = true;\n      reconnect();\n    }\n  }, [ids.length]);\n\n  const initWS = () => {\n    let WS;\n    try {\n      WS = new WebSocket(\"wss://stream.coinmarketcap.com/price/latest\");\n      WSInstance.current = WS;\n    } catch (e) {\n      console.log(\"reconnect!\");\n      setTimeout(() => {\n        initWS();\n        subscribeWS(ids);\n      }, 1000);\n    }\n  };\n\n  const closeWS = () => {\n    WSInstance.current?.close();\n  };\n\n  const subscribeWS = (ids: number[]) => {\n    if (!WSInstance.current) return;\n    const WS = WSInstance.current;\n    setWSStatus(WS.readyState);\n    WS.onopen = function () {\n      console.log(\"ws connected!\");\n      setWSStatus(WS.readyState);\n      if (resubscribing.current) {\n        resubscribing.current = false;\n      }\n      const param = {\n        method: \"subscribe\",\n        id: \"price\",\n        data: {\n          cryptoIds: ids,\n        },\n      };\n      WS.send(JSON.stringify(param));\n\n      WS.onmessage = function (res) {\n        onMessage && onMessage(res);\n      };\n      WS.addEventListener(\"close\", (e) => {\n        console.log(\"ws closed!\");\n        setWSStatus(WS.readyState);\n        if (!resubscribing.current) {\n          console.log(\"reconnecting...\");\n          onClose && onClose();\n          setTimeout(() => {\n            initWS();\n            subscribeWS(ids);\n          }, 1000);\n        }\n      });\n    };\n  };\n\n  const reconnect = () => {\n    console.log(\"reconnect!\");\n    closeWS();\n    initWS();\n    subscribeWS(ids);\n  };\n  return [wsStatus, reconnect] as const;\n};\n\nexport default useWbSocket;\n","import axios from \"axios\";\nimport styled from \"styled-components\";\n\nconst instance = axios.create({\n  headers: {\n    Authorization: `Bearer 5fcb77e68787da1467daeea55f0dd01a017efdf3`,\n  },\n});\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 8px;\n  /* position: absolute; */\n  /* bottom: 0.5em; */\n  width: 100%;\n  font-size: 0.8em;\n  a {\n    &:visited {\n      color: var(--text-color);\n    }\n  }\n  .export {\n    text-decoration: underline;\n  }\n`;\n\nconst Info = () => {\n  const updateShortLink = () => {\n    instance\n      .patch(\"https://api-ssl.bitly.com/v4/bitlinks/bit.ly/3NOtY7t\", {\n        // long_url: window.location.href,\n        // link: \"https://blog.iccfish.com/2021/08/04/unlock-ssh-of-xiaomi-routers/\",\n        long_url: \"https://google.com\",\n      })\n      .then(({ data }) => {\n        navigator.clipboard.writeText(data.link).then(() => {\n          alert(\"Link Copied!\");\n        });\n      });\n  };\n  // const getLink = () => {\n  //   instance.get(\"https://api-ssl.bitly.com/v4/bitlinks/bit.ly/3NCMPSD\");\n  // };\n  return (\n    <Wrapper className={\"info\"}>\n      <span>\n        Data Source:{\" \"}\n        <a href='https://coinmarketcap.com/' target='_blank' rel='noreferrer'>\n          CoinMarketCap\n        </a>\n      </span>\n      &nbsp;&nbsp;&nbsp;\n      <span>\n        <a\n          href='https://github.com/YueminHu/crypto_watch'\n          target='_blank'\n          rel='noreferrer'\n        >\n          Github\n        </a>\n      </span>\n      &nbsp;&nbsp;&nbsp;\n      <span className='export' onClick={updateShortLink}>\n        Update\n      </span>\n      {/* <span className='export' onClick={getLink}>\n        <button>Get</button>\n      </span> */}\n    </Wrapper>\n  );\n};\n\nexport default Info;\n","import { useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport PriceCell from \"./Cell\";\nimport Status from \"./Footer\";\nimport AddToken from \"./Add\";\nimport { GlobalContextProvider } from \"./context\";\nimport useGetListings from \"./hooks/useGetListings\";\nimport useGetMapStorage from \"./hooks/useGetMapStorage\";\nimport useSubsequentUpdate from \"./hooks/useSubsequentUpdate\";\nimport useWbSocket from \"./hooks/useWebSocket\";\nimport Info from \"./Info\";\nimport eventEmitter from \"./utils/eventEmitter\";\n\nconst ID_SEPARATOR = \"_\";\nconst AMOUNT_SEPARATOR = \"-\";\n\nconst LOCAL_KEY = \"LOCAL_KEY\";\nconst LOCAL_ID_KEY = \"LOCAL_ID_KEY\";\n\nconst Wrapper = styled.div`\n  text-align: left;\n  padding: 0px 8px;\n  /* padding-top: 8px; */\n`;\n\nconst HeadWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: sticky;\n  /* top: 0; */\n  background-image: linear-gradient(\n    to bottom,\n    var(--background-color) 0%,\n    var(--background-color) 70%,\n    transparent 100%\n  );\n  top: -1px;\n  z-index: 10;\n  > div:first-child {\n    flex-grow: 1;\n  }\n`;\n\nconst getIds = () => {\n  const idsStored =\n    localStorage.getItem(LOCAL_ID_KEY) ||\n    new URL(window.location.href).searchParams.get(\"ids\") ||\n    \"\";\n\n  const hasNewFormat = idsStored.match(/[a-z]/);\n\n  return idsStored.split(ID_SEPARATOR).map((id) => ({\n    id: id.includes(AMOUNT_SEPARATOR)\n      ? parseInt(id.split(AMOUNT_SEPARATOR)[0], hasNewFormat ? 36 : 10)\n      : parseInt(id, hasNewFormat ? 36 : 10) || 1,\n    amount: id.includes(AMOUNT_SEPARATOR)\n      ? Number(id.split(AMOUNT_SEPARATOR)[1])\n      : \"\",\n  }));\n};\n\nexport default function App() {\n  const [edit, setEdit] = useState(false);\n\n  const [prices, setPrices] = useState<\n    {\n      id: number;\n      price?: number;\n      p24h?: number;\n      slug?: string;\n      name?: string;\n      amount?: number | string;\n    }[]\n  >(getIds);\n\n  // console.log(prices);\n\n  const [expandStatus, setExpandStatus] = useState({});\n\n  const ids = prices.map(({ id }) => id);\n  const amounts = prices.map(({ amount }) => amount);\n\n  const mapData = useGetMapStorage(LOCAL_KEY);\n\n  const [refetchAPI, lastRefetch] = useGetListings(ids, setPrices);\n\n  const [wsStatus, reconnect] = useWbSocket({\n    ids,\n    onClose: () => refetchAPI(),\n    onMessage: (res: any) => {\n      const data = JSON.parse(res.data);\n      if (data?.d?.cr) {\n        const info = data.d.cr;\n        // console.log(info);\n        eventEmitter.emit(`WS-${info.id}`, info);\n        setPrices((prices) => {\n          return prices.map((p) => {\n            if (p.id === info.id) {\n              return {\n                ...info,\n                ...p,\n                price: info.p,\n                p24h: info.p24h,\n              };\n            }\n            return p;\n          });\n        });\n      } else {\n        console.log(data);\n      }\n    },\n  });\n\n  const handleAddOrRemove = (id: number, add?: boolean) => {\n    if (ids.includes(id) && add) {\n      return;\n    }\n    setPrices((prices) => {\n      const newPrices = add\n        ? [\n            ...prices,\n            {\n              id: id,\n            },\n          ]\n        : prices.filter((price) => price.id !== id);\n      return newPrices;\n    });\n  };\n\n  const handleExpand = (expand?: boolean) => {\n    if (expand) {\n    } else {\n      setExpandStatus({});\n    }\n  };\n\n  const writeURL = (ids: string) => {\n    const url = new URL(window.location.href);\n    url.searchParams.set(\"ids\", ids);\n    window.history.replaceState(\"\", document.title, url);\n  };\n\n  /**\n   * rewrite URL when id length / order changes\n   */\n  useSubsequentUpdate(() => {\n    // console.log(ids);\n    // console.log(amounts);\n    // console.log(ids, amounts);\n    const idsString = ids\n      .map((id, idx) => {\n        return (\n          id.toString(36) +\n          (amounts[idx] ? `${AMOUNT_SEPARATOR}${amounts[idx]}` : \"\")\n        );\n      })\n      .join(ID_SEPARATOR);\n\n    // console.log(amounts, idsStringss);\n\n    // const idsString = ids\n    //   .map((id, idx) => {\n    //     return id.toString(36);\n    //   })\n    //   .join(ID_SEPARATOR);\n    writeURL(idsString);\n    localStorage.setItem(LOCAL_ID_KEY, idsString);\n    // if (ids.length) {\n    // }\n  }, ids.join() + amounts.join());\n\n  return (\n    <GlobalContextProvider>\n      <div className='App'>\n        <HeadWrapper>\n          <AddToken\n            onAdd={(id: number) => handleAddOrRemove(id, true)}\n            mapData={mapData}\n          />\n          <button onClick={() => handleExpand(false)}>{\"Collapse All\"}</button>\n          &nbsp;\n          <button onClick={() => setEdit(!edit)}>\n            {edit ? \"Done\" : \"Edit\"}\n          </button>\n          &nbsp;\n          <button\n            onClick={() => {\n              const newPrices = [...prices];\n              newPrices.sort((a, b) =>\n                a.amount &&\n                a.price &&\n                b.price &&\n                b.amount &&\n                typeof a.amount === \"number\" &&\n                typeof b.amount === \"number\"\n                  ? b.amount * b.price - a.amount * a.price\n                  : -Infinity\n              );\n              setPrices(newPrices);\n            }}\n          >\n            Sort by value\n          </button>\n          &nbsp;\n          <button\n            onClick={() => {\n              const newPrices = [...prices];\n              newPrices.sort((a, b) =>\n                a.price && b.price ? b.price - a.price : Infinity\n              );\n              setPrices(newPrices);\n            }}\n          >\n            Sort by price\n          </button>\n        </HeadWrapper>\n        <Wrapper>\n          {prices.map((info: any, idx) => (\n            <PriceCell\n              name={mapData[info.id]?.symbol}\n              key={info.id}\n              info={info}\n              onRemove={(id: number) => handleAddOrRemove(id)}\n              prices={prices}\n              setPrices={setPrices}\n              idx={idx}\n              expandStatus={expandStatus}\n              setExpandStatus={setExpandStatus}\n              edit={edit}\n            />\n          ))}\n        </Wrapper>\n        {prices.some((price) => !!price.amount) && (\n          <p>\n            Total Amount: $\n            <b>\n              {prices\n                .reduce((prev, next) => {\n                  return next.amount &&\n                    next.price &&\n                    typeof next.amount == \"number\"\n                    ? prev + next.amount * next.price\n                    : prev;\n                }, 0)\n                .toFixed(2)}\n            </b>\n          </p>\n        )}\n        <Info />\n\n        {ids.length ? (\n          <Status\n            wsStatus={wsStatus}\n            // wsInstance={WSInstance}\n            reconnect={reconnect}\n            lastRefetch={lastRefetch}\n          />\n        ) : null}\n      </div>\n    </GlobalContextProvider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}